[
  {
    "objectID": "Task/Info.html",
    "href": "Task/Info.html",
    "title": "Vast Challenge 2024",
    "section": "",
    "text": "The business community in Oceanus is dynamic with new startups, mergers, acquisitions, and investments. FishEye International closely watches business records to keep tabs on commercial fishing operators. FishEye’s goal is to identify and prevent illegal fishing in the region’s sensitive marine ecosystem. Analysts are working with company records that show ownership, shareholders, transactions, and information about the typical products and services of each entity. FishEye’s analysts have a hybrid automated/manual process to transform the data into CatchNet: the Oceanus Knowledge Graph.\nIn the past year, Oceanus’s commercial fishing business community was rocked by the news that SouthSeafood Express Corp was caught fishing illegally. FishEye wants to understand temporal patterns and infer what may be happening in Oceanus’s fishing marketplace because of SouthSeafood Express Corp’s illegal behavior and eventual closure. The competitive nature of Oceanus’s fishing market may cause some businesses to react aggressively to capture SouthSeafood Express Corp’s business while other reactions may come from the awareness that illegal fishing does not go undetected and unpunished.\n\n\n\nA key element in stopping illegal fishing is holding the people who own nefarious companies accountable. Thus, FishEye is keenly interested in developing visualization tools that work with CatchNet to identify the people who hold influence over business networks. That is especially difficult with varied and changing shareholder and ownership relationships.\n\nFishEye analysts want to better visualize changes in corporate structures over time. Create a visual analytics approach that analysts can use to highlight temporal patterns and changes in corporate structures. Examine the most active people and businesses using visual analytics. [Question 1]\nUsing your visualizations, find and display examples of typical and atypical business transactions (e.g., mergers, acquisitions, etc.). Can you infer the motivations behind changes in their activity? [Question 2]\nDevelop a visual approach to examine inferences. Infer how the influence of a company changes through time. Can you infer ownership or influence that a network may have? [Question 3]\nIdentify the network associated with SouthSeafood Express Corp and visualize how this network and competing businesses change as a result of their illegal fishing behavior. Which companies benefited from SouthSeafood Express Corp legal troubles? Are there other suspicious transactions that may be related to illegal fishing? Provide visual evidence for your conclusions. [Question 4]\n\nNote: the VAST challenge is focused on visual analytics and graphical figures should be included with your response to each question. Please include a reasonable number of figures for each question (no more than about 6) and keep written responses as brief as possible (around 250 words per question). Participants are encouraged to new visual representations rather than relying on traditional or existing approaches."
  },
  {
    "objectID": "Task/Info.html#background",
    "href": "Task/Info.html#background",
    "title": "Vast Challenge 2024",
    "section": "",
    "text": "The business community in Oceanus is dynamic with new startups, mergers, acquisitions, and investments. FishEye International closely watches business records to keep tabs on commercial fishing operators. FishEye’s goal is to identify and prevent illegal fishing in the region’s sensitive marine ecosystem. Analysts are working with company records that show ownership, shareholders, transactions, and information about the typical products and services of each entity. FishEye’s analysts have a hybrid automated/manual process to transform the data into CatchNet: the Oceanus Knowledge Graph.\nIn the past year, Oceanus’s commercial fishing business community was rocked by the news that SouthSeafood Express Corp was caught fishing illegally. FishEye wants to understand temporal patterns and infer what may be happening in Oceanus’s fishing marketplace because of SouthSeafood Express Corp’s illegal behavior and eventual closure. The competitive nature of Oceanus’s fishing market may cause some businesses to react aggressively to capture SouthSeafood Express Corp’s business while other reactions may come from the awareness that illegal fishing does not go undetected and unpunished."
  },
  {
    "objectID": "Task/Info.html#tasks-and-questions",
    "href": "Task/Info.html#tasks-and-questions",
    "title": "Vast Challenge 2024",
    "section": "",
    "text": "A key element in stopping illegal fishing is holding the people who own nefarious companies accountable. Thus, FishEye is keenly interested in developing visualization tools that work with CatchNet to identify the people who hold influence over business networks. That is especially difficult with varied and changing shareholder and ownership relationships.\n\nFishEye analysts want to better visualize changes in corporate structures over time. Create a visual analytics approach that analysts can use to highlight temporal patterns and changes in corporate structures. Examine the most active people and businesses using visual analytics. [Question 1]\nUsing your visualizations, find and display examples of typical and atypical business transactions (e.g., mergers, acquisitions, etc.). Can you infer the motivations behind changes in their activity? [Question 2]\nDevelop a visual approach to examine inferences. Infer how the influence of a company changes through time. Can you infer ownership or influence that a network may have? [Question 3]\nIdentify the network associated with SouthSeafood Express Corp and visualize how this network and competing businesses change as a result of their illegal fishing behavior. Which companies benefited from SouthSeafood Express Corp legal troubles? Are there other suspicious transactions that may be related to illegal fishing? Provide visual evidence for your conclusions. [Question 4]\n\nNote: the VAST challenge is focused on visual analytics and graphical figures should be included with your response to each question. Please include a reasonable number of figures for each question (no more than about 6) and keep written responses as brief as possible (around 250 words per question). Participants are encouraged to new visual representations rather than relying on traditional or existing approaches."
  },
  {
    "objectID": "ShinyApp.html",
    "href": "ShinyApp.html",
    "title": "Shiny App",
    "section": "",
    "text": "The R Shiny application aims to help user explore the data provided by MC3 of the VAST Challenge 2024.\nThe Shiny App can be accessed on Shiny.io here.\nYou can find the user guide below."
  },
  {
    "objectID": "ShinyApp.html#interface",
    "href": "ShinyApp.html#interface",
    "title": "Shiny App",
    "section": "Interface",
    "text": "Interface\nThe app is made up of 2 panels.\n\nOn the left is the options panel where various options can be selected to interact with available data for visualisation. In this panel, you will find either a drop down list or a slider for you to make your preferred selection.\n\nOn the right is the visualisation panel with 4 tabs for data exploration. Visualisations are also plotted here.\n\nNetwork analysis of connected individuals\nActivity status of entities connected to SouthSeafood\nNetwork analysis of transactions\nAtypical Transactions"
  },
  {
    "objectID": "ShinyApp.html#network-analysis-of-connected-individuals",
    "href": "ShinyApp.html#network-analysis-of-connected-individuals",
    "title": "Shiny App",
    "section": "Network Analysis of Connected Individuals",
    "text": "Network Analysis of Connected Individuals\nThis page shows the nodes of interest, the nodes that they are linked to, as well as the centrality between the nodes. Arrows are also shown in order to more clearly define the relationship.\n\nTo select a starting node (highlighted in red), first select corresponding starting alphabet of the node in the “Select Starting Alphabet” drop down.\nThen, select the node’s name under “Select a VIP”. The network plot will be shown.\nTo more clearly a related node and its centrality value, you can select the relevant node of interest that is linked to the VIP (highlighted in red).\n\nBelow is an example showing Dalton Inc. as the node of interest, and their relationship with Robert Whitehead is being selected."
  },
  {
    "objectID": "ShinyApp.html#activity-status-of-entities-connected-to-southseafood",
    "href": "ShinyApp.html#activity-status-of-entities-connected-to-southseafood",
    "title": "Shiny App",
    "section": "Activity Status of Entities Connected to SouthSeafood",
    "text": "Activity Status of Entities Connected to SouthSeafood\nThis page shows the network of companies in Oceanus.\nAbove the plot, the following information is shown:\n\nTotal number of active companies (highlighted in green in the plot)\nTotal number of inactive companies (highlighted in grey in the plot)\nTotal number of companies with links to SouthSeafood Express Corp\n\n\nThe network plot has the following functions:\n\nZoom (use mouse scroll)\nPan (click and drag to navigate around the plot)\nTooltip (hover using mouse)\n\nShows name of node and number of links the node has\n\nHighlight (left click using mouse)"
  },
  {
    "objectID": "ShinyApp.html#network-analysis-of-transactions",
    "href": "ShinyApp.html#network-analysis-of-transactions",
    "title": "Shiny App",
    "section": "Network Analysis of Transactions",
    "text": "Network Analysis of Transactions\nThis page shows the directed network graph of key personnel transactions. The slider on the left is used to select the relevant years of interest. Each node (blue) represents unique companies, and each directed link is marked with the year the transaction occurred."
  },
  {
    "objectID": "ShinyApp.html#atypical-transactions",
    "href": "ShinyApp.html#atypical-transactions",
    "title": "Shiny App",
    "section": "Atypical Transactions",
    "text": "Atypical Transactions\nIn this page, transactions highlighted as atypical are visualised. Due to the volumne of transactions, only the top 50 are shown.\nThe start page shows all entities with all their relationships. The lager nodes indicate entities with higher centrality i.e. crucial to connecting different parts of the network. The distance between each node is also determined by their relevant centrality.\n\nUsing the drop down, you can specify the entity of interest (highlighted in pink), along with the type of relationship you want to hone in on:\n\nShareholder\nWorks for (Employee)\nBeneficial Ownership\n\n\nThe options panel also offers more information concerning the plot:\n\nEntity of interest being plotted\nRelationship type being plotted\nExplanation of node size\nDefinition of betweenness centrality\nDefinition of closeness centrality\n\n\nTo further interact with the centrality plot, hover over the top right hand corner to reveal plotly functions. Hovering over nodes will also reveal their ID and centrality scores.\n\nThank you for using our app! We hope you had an enjoyable experience!"
  },
  {
    "objectID": "Overview/Summary.html",
    "href": "Overview/Summary.html",
    "title": "Overview",
    "section": "",
    "text": "FishEye International is a company dedicated to monitoring and preserving marine ecosystems by tracking commercial fishing activities. In recent times, the commercial fishing community in Oceanus has been disrupted by illegal fishing activities, most notably by SouthSeafood Express Corp. This has highlighted the need for FishEye to enhance its monitoring capabilities. To prevent illegal fishing and better understand the impacts of these activities, FishEye requires advanced visualization tools to analyze and interpret complex business relationships and changes in corporate structures over time.\n\n\n\nDevelop a visual analytics approach to help FishEye International analysts visualize and understand temporal patterns and changes in corporate structures to identify and prevent illegal fishing.\n\n\n\n\ntemporal patterns and changes in corporate structures.\nIdentify and display examples of atypical business transactions, inferring motivations behind changes in activity.\nExamine how the influence of a company changes over time, identifying ownership or influence within a network.\nVisualize the network associated with SouthSeafood Express Corp and analyze how this network and competing businesses change due to their illegal fishing behavior.\n\n\nflowchart LR\n    A[Preprocessing] --&gt; |Loading required libraries| B[Data Wrangling]\n    A --&gt; |Loading libraries| B[Data Wrangling]\n    A --&gt; |Renaming Columns| B[Data Wrangling]\n    A --&gt; |Standardizing Date Time Formats| B[Data Wrangling]\n    A --&gt; |Splitting Words| B[Data Wrangling]\n    A --&gt; |Loading Data| B[Data Wrangling]\n    B[Data Wrangling] --&gt; |Handling Missing Values| C[Load Data]\n    B --&gt; |Setting empty values in revenue to 0| C[Load Data]\n    B --&gt; |Extracting Nodes| C[Load Data]\n    B --&gt; |Extracting Links| C[Load Data]\n   C[Load Data] --&gt;  D[Analysis]\n   D[Analysis] --&gt; D1[Q1: temporal changes in corporate structures] \n   D[Analysis] --&gt; D3[Q2: atypical business transactions] \n   D[Analysis] --&gt; D4[Q3: changes in ownership] \n   D[Analysis] --&gt; D5[Q4: changes after illegal incident]\n\n\n\n\nflowchart LR\n    A[Preprocessing] --&gt; |Loading required libraries| B[Data Wrangling]\n    A --&gt; |Loading libraries| B[Data Wrangling]\n    A --&gt; |Renaming Columns| B[Data Wrangling]\n    A --&gt; |Standardizing Date Time Formats| B[Data Wrangling]\n    A --&gt; |Splitting Words| B[Data Wrangling]\n    A --&gt; |Loading Data| B[Data Wrangling]\n    B[Data Wrangling] --&gt; |Handling Missing Values| C[Load Data]\n    B --&gt; |Setting empty values in revenue to 0| C[Load Data]\n    B --&gt; |Extracting Nodes| C[Load Data]\n    B --&gt; |Extracting Links| C[Load Data]\n   C[Load Data] --&gt;  D[Analysis]\n   D[Analysis] --&gt; D1[Q1: temporal changes in corporate structures] \n   D[Analysis] --&gt; D3[Q2: atypical business transactions] \n   D[Analysis] --&gt; D4[Q3: changes in ownership] \n   D[Analysis] --&gt; D5[Q4: changes after illegal incident]"
  },
  {
    "objectID": "Overview/Summary.html#background",
    "href": "Overview/Summary.html#background",
    "title": "Overview",
    "section": "",
    "text": "FishEye International is a company dedicated to monitoring and preserving marine ecosystems by tracking commercial fishing activities. In recent times, the commercial fishing community in Oceanus has been disrupted by illegal fishing activities, most notably by SouthSeafood Express Corp. This has highlighted the need for FishEye to enhance its monitoring capabilities. To prevent illegal fishing and better understand the impacts of these activities, FishEye requires advanced visualization tools to analyze and interpret complex business relationships and changes in corporate structures over time."
  },
  {
    "objectID": "Overview/Summary.html#project-objective",
    "href": "Overview/Summary.html#project-objective",
    "title": "Overview",
    "section": "",
    "text": "Develop a visual analytics approach to help FishEye International analysts visualize and understand temporal patterns and changes in corporate structures to identify and prevent illegal fishing."
  },
  {
    "objectID": "Overview/Summary.html#tasks",
    "href": "Overview/Summary.html#tasks",
    "title": "Overview",
    "section": "",
    "text": "temporal patterns and changes in corporate structures.\nIdentify and display examples of atypical business transactions, inferring motivations behind changes in activity.\nExamine how the influence of a company changes over time, identifying ownership or influence within a network.\nVisualize the network associated with SouthSeafood Express Corp and analyze how this network and competing businesses change due to their illegal fishing behavior.\n\n\nflowchart LR\n    A[Preprocessing] --&gt; |Loading required libraries| B[Data Wrangling]\n    A --&gt; |Loading libraries| B[Data Wrangling]\n    A --&gt; |Renaming Columns| B[Data Wrangling]\n    A --&gt; |Standardizing Date Time Formats| B[Data Wrangling]\n    A --&gt; |Splitting Words| B[Data Wrangling]\n    A --&gt; |Loading Data| B[Data Wrangling]\n    B[Data Wrangling] --&gt; |Handling Missing Values| C[Load Data]\n    B --&gt; |Setting empty values in revenue to 0| C[Load Data]\n    B --&gt; |Extracting Nodes| C[Load Data]\n    B --&gt; |Extracting Links| C[Load Data]\n   C[Load Data] --&gt;  D[Analysis]\n   D[Analysis] --&gt; D1[Q1: temporal changes in corporate structures] \n   D[Analysis] --&gt; D3[Q2: atypical business transactions] \n   D[Analysis] --&gt; D4[Q3: changes in ownership] \n   D[Analysis] --&gt; D5[Q4: changes after illegal incident]\n\n\n\n\nflowchart LR\n    A[Preprocessing] --&gt; |Loading required libraries| B[Data Wrangling]\n    A --&gt; |Loading libraries| B[Data Wrangling]\n    A --&gt; |Renaming Columns| B[Data Wrangling]\n    A --&gt; |Standardizing Date Time Formats| B[Data Wrangling]\n    A --&gt; |Splitting Words| B[Data Wrangling]\n    A --&gt; |Loading Data| B[Data Wrangling]\n    B[Data Wrangling] --&gt; |Handling Missing Values| C[Load Data]\n    B --&gt; |Setting empty values in revenue to 0| C[Load Data]\n    B --&gt; |Extracting Nodes| C[Load Data]\n    B --&gt; |Extracting Links| C[Load Data]\n   C[Load Data] --&gt;  D[Analysis]\n   D[Analysis] --&gt; D1[Q1: temporal changes in corporate structures] \n   D[Analysis] --&gt; D3[Q2: atypical business transactions] \n   D[Analysis] --&gt; D4[Q3: changes in ownership] \n   D[Analysis] --&gt; D5[Q4: changes after illegal incident]"
  },
  {
    "objectID": "Overview/Summary.html#q1-methodology",
    "href": "Overview/Summary.html#q1-methodology",
    "title": "Overview",
    "section": "Q1 Methodology",
    "text": "Q1 Methodology\nThe lack of time-series data for each node making it difficult to directly compare changes in corporate structures for the same company over time. Therefore, we simplify our approach by assuming that a company’s structure is proportional to its transaction volume. By grouping transaction data by start date and counting the number of transactions for each period, we can illustrate changes in corporate structures over time. This method allows us to visualize temporal patterns and infer structural changes based on transaction activity.\nTo focus on the most relevant period, we filter the data to only keep transactions from 2000 (five years before 2005) to 2035 (the end of the dataset). This allows us to capture recent changes to entities while excluding older, less relevant data.\nAnother way to observe changes in corporate structures over time is to visualize the changes in the most active people and businesses. By identifying and tracking these key entities, we can gain insights into how their influence and activities shape the overall corporate structure during different periods. This method complements the transaction volume analysis, providing a more comprehensive view of temporal patterns and structural changes."
  },
  {
    "objectID": "Overview/Summary.html#q1-visualization",
    "href": "Overview/Summary.html#q1-visualization",
    "title": "Overview",
    "section": "Q1 Visualization",
    "text": "Q1 Visualization\n\n\n\nFig 1\n\n\n\n\n\nFig 2"
  },
  {
    "objectID": "Overview/Summary.html#q1-key-findings",
    "href": "Overview/Summary.html#q1-key-findings",
    "title": "Overview",
    "section": "Q1 Key findings",
    "text": "Q1 Key findings\nIn Figure 1, we observe that the rapid growth in transactions began around 2005, peaking in 2034, followed by a sharp decline in 2035. Figure 2 further illustrates these trends by showing fluctuations in the number of active companies over time. Despite these fluctuations, there is a general upward trend in the number of active companies, particularly from 2010 onwards, where the numbers reach their highest values in the dataset. This pattern mirrors the transaction volume trends observed in Figure 1. Additionally, we notice a dip in the number of active companies around 2035, followed by an increase. This suggests that a significant event may have occurred around 2035, leading to market restructuring."
  },
  {
    "objectID": "Overview/Summary.html#q2-methodology",
    "href": "Overview/Summary.html#q2-methodology",
    "title": "Overview",
    "section": "Q2 Methodology",
    "text": "Q2 Methodology\nTo address the task of identifying and displaying examples of typical and atypical business transactions, we focused on nodes and edges that signify ownership and employment relationships.\n\nStep 1: Filtering for Relevant Edges\nWe began by filtering the dataset to retain only the edges representing “Event.Owns.Shareholdership,” “Event.WorksFor,” and “Event.Owns.BeneficialOwnership.” These types of edges are crucial for understanding the ownership and employment structures within the corporate network.\n\n\nStep 2: Identifying Suspicious Nodes\nNext, we aimed to identify atypical transactions by leveraging centrality measures. Centrality is a critical metric in network analysis that indicates the importance or influence of a node within the network. We calculated centrality scores for all nodes and then filtered out those below a certain centrality threshold to eliminate false positives.\n\n\nStep 3: Highlighting Suspicious Nodes\nBy applying the centrality threshold, we identified the top 50 suspicious nodes. These nodes, which exhibit unusually high centrality, are indicative of atypical transactions. Their elevated centrality scores suggest that they play a disproportionately influential role in the network, potentially pointing to suspicious or anomalous behavior.\nThrough this method, we can highlight nodes that warrant further investigation and provide insights into the underlying motivations for changes in activity. This analysis helps us identify patterns of influence and ownership that deviate from typical business transactions, thereby uncovering potentially illicit activities within the corporate network."
  },
  {
    "objectID": "Overview/Summary.html#q2-visualization",
    "href": "Overview/Summary.html#q2-visualization",
    "title": "Overview",
    "section": "Q2 Visualization",
    "text": "Q2 Visualization\n\n\n\nFig3"
  },
  {
    "objectID": "Overview/Summary.html#q2-key-findings",
    "href": "Overview/Summary.html#q2-key-findings",
    "title": "Overview",
    "section": "Q2 Key findings",
    "text": "Q2 Key findings\nBusiness transactions are classified as atypical if:\n\nUnusual Transactions (e.g., sudden changes in ownership, unusual shareholder activity).\nUse clustering algorithms to group similar transactions amongst groups of people.\n\nThe above graph effectively highlights key players in atypical business transactions through centrality measures. Entities like Baxter-Turner, Kim Ellis, Theresa Frank, Henderson Group, and Rodriguez, Smith and Murray are central to the network, either due to their strategic positions (high betweenness centrality) or their connectivity (high closeness centrality). This visualization can help identify crucial nodes for further analysis or strategic planning in business networks."
  },
  {
    "objectID": "Overview/Summary.html#q3-methodology",
    "href": "Overview/Summary.html#q3-methodology",
    "title": "Overview",
    "section": "Q3 Methodology",
    "text": "Q3 Methodology\nTo address the question of examining how the influence of a company changes over time and identifying ownership or influence within a network, we focused on tracking changes in the most influential individuals (VIPs) and their networks. Here is a summary of our approach:\n\nStep 1: Splitting Nodes and Filtering Edges\nFirst, we split the nodes into two categories: people and companies. We then filtered the dataset to retain only ownership-related edges, such as those representing shareholdership, beneficial ownership, and employment relationships. This step ensures that we focus on the connections that are relevant to understanding influence within the network.\n\n\nStep 2: Identifying Most Influential Individuals (VIPs)\nNext, we determined the most influential individuals by setting a threshold for the number of ownership connections. Individuals who exceed this threshold are considered VIPs, as their numerous ownership connections suggest a higher level of influence within the network.\n\n\n\nnumber of ownership connections\ncount\npercentage\n\n\n\n\n\n\n\n\n92\n4\n0.00774\n\n\n\n\n\n\n91\n18\n0.0349\n\n\n\n\n\n\n29\n1\n0.00194\n\n\n\n\n\n\n18\n2\n0.00387\n\n\n\n\n\n\n15\n1\n0.00194\n\n\n\n\n\n\n13\n2\n0.00387\n\n\n\n\n\n\n12\n3\n0.00581\n\n\n\n\n\n\n11\n4\n0.00774\n\n\n\n\n\n\n&lt;= 10\n51594\n99.96\n\n\n\nGiven the significant gap between the top 2 groups and the 3rd, we identified the top 22 individuals (those owning 91 or more companies) as VIPs, as their extensive ownership connections suggest a higher level of influence within the network.\n\n\nStep 3: Filtering Connections Involving Influential Individuals\nFinally, we filtered the ownership connections to include only those involving these 22 influential individuals (VIPs). By focusing on these connections, we can track how the influence of these key individuals changes over time and how their networks"
  },
  {
    "objectID": "Overview/Summary.html#q3-visualization",
    "href": "Overview/Summary.html#q3-visualization",
    "title": "Overview",
    "section": "Q3 Visualization",
    "text": "Q3 Visualization\nGiven the significant increase in data from 2004 onwards, focusing on every 10 years from 2005 to 2035 would provide a more detailed analysis of changes in ownership and influence.\n\n\n\nFig 4\n\n\n\n\n\nFig 5\n\n\n\n\n\nFig 6\n\n\n\n\n\nFig 7"
  },
  {
    "objectID": "Overview/Summary.html#q3-key-findings",
    "href": "Overview/Summary.html#q3-key-findings",
    "title": "Overview",
    "section": "Q3 Key findings",
    "text": "Q3 Key findings\nIn 2005, the network is sparse with moderate VIP connections, indicating balanced influence. By 2015, the network is denser, showing increased influence and control among VIPs. In 2025, the network’s complexity peaks, with VIPs owning shares in many companies, indicating heightened market control. By 2035, the network forms a star-like structure, with a central VIP gaining substantial influence and direct connections to numerous companies. This significant power consolidation may be linked to the SouthSeafood incident, triggering the restructuring and concentration of influence."
  },
  {
    "objectID": "Overview/Summary.html#q4-methodology",
    "href": "Overview/Summary.html#q4-methodology",
    "title": "Overview",
    "section": "Q4 Methodology",
    "text": "Q4 Methodology\nTo visualize and analyze the network associated with SouthSeafood Express Corp and its changes due to illegal fishing behavior,\nFirst, we extracted all nodes and edges linked to SouthSeafood Express Corp and classified all other fishing companies as competitors, with the remaining entities labeled as non-competitors. Then, we identified significant changes of start_date & end_date in connections and network structure resulting from SouthSeafood’s illegal activities and closure. This analysis revealed shifts in influence, with some companies gaining and others losing power, highlighting patterns of power consolidation."
  },
  {
    "objectID": "Overview/Summary.html#q4-visualization",
    "href": "Overview/Summary.html#q4-visualization",
    "title": "Overview",
    "section": "Q4 Visualization",
    "text": "Q4 Visualization"
  },
  {
    "objectID": "Overview/Summary.html#q4-key-findings",
    "href": "Overview/Summary.html#q4-key-findings",
    "title": "Overview",
    "section": "Q4 Key findings",
    "text": "Q4 Key findings\nAfter the incident, the number of blue nodes (fishing companies) decreased significantly, and yellow nodes (non-competitors) also decreased slightly. Despite the reduction in nodes, the network has become denser, indicating increased interconnectedness among the remaining entities.\n\nThe results show that the top beneficiaries, all classified as fishing companies, significantly increased their network centrality following SouthSeafood Express Corp’s legal troubles. Anderson-Roberts, Hall, Hartman and Hall, and Kirk Inc., among others, saw the largest gains, suggesting they capitalized on the shift in the network’s structure."
  },
  {
    "objectID": "MeetingMinutes/MeetingMinutes5.html",
    "href": "MeetingMinutes/MeetingMinutes5.html",
    "title": "Meeting Minutes 3",
    "section": "",
    "text": "Meeting Minutes 5\nDate: 27 June 2024\nAttendance: All present\nProposed Project Timeline:\nCurrent Status:\nCodes have been combined and compiled into combined.qmd\nShiny App started.\nAgenda:\n\nR Shiny App direction\n\nDiscussion Points:\nPoster\n\nCompleted and submitted\n\nShiny App\n\nwith reference to Joy Paas, it was agreed that the Shiny App will be split into modular components for ease of collaborative coding.\nThe Shiny app code will be modularized by splitting it into separate files for the UI and server components for each graph, as well as a common styles file. This approach makes the code more manageable and allows team members to work on different parts independently\nKeke - Complete visualisation for Typical vs Atypical transactions\nYouTing - Finish up the rest of the app\nAlicia - Start on user guide\n\nDeadlines:\n29 June - Project Submission (website, Shiny app, report)\n29 June - Poster Presentation"
  },
  {
    "objectID": "MeetingMinutes/MeetingMinutes3.html",
    "href": "MeetingMinutes/MeetingMinutes3.html",
    "title": "Meeting Minutes 3",
    "section": "",
    "text": "Meeting Minutes 3\nDate: 18 June 2024\nAttendance: All present\nProposed Project Timeline:\nCurrent Status:\nCodes have been combined.\nYouTing will start first, while Alicia and Keke complete their exams on 24 June Monday.\nAgenda:\n\nDiscuss the overview and storytelling approach for the project.\nOutline the project sections and specific questions to address.\n\nDiscussion Points:\nOverview and Storytelling:\n\nThe project will be structured to clearly narrate the impact and findings from our analysis.\nKey sections identified for the report: preprocessing, solving four key questions, analysis and conclusion.\n\nSections Breakdown:\n1. Preprocessing:\n\nDiscussed the steps necessary for cleaning and organizing the data to ensure accurate analysis.\n\n2. Solving Four Questions:\n\nQ1. Corporate Structure, Active Influences:\n\nObjective: Identify all active nodes within the corporate structure.\n\nQ2. Atypical/Typical Transactions (B2B):\n\nObjective: Determine atypical nodes and edges by analyzing business-to-business transactions.\n\nQ3. Network / Ownership Analysis (person2person):\n\nObjective: Identify the most influential person nodes within the network.\n\nQ4. Impact of SouthSeafood Corp Closure:\n\nObjective: Analyze the impact of SouthSeafood Express Corp’s closure, identifying potential accomplices, competitors, and other suspicious transactions.\n\n\n3. Analysis:\n\nIntegrate conclusions from each question to uncover overlaps between the nodes of Q1 and Q4.\nCompare results from Q1-Q4 to identify individuals or entities that repeatedly appear, suggesting they may be suspicious and should be monitored closely.\n\n\nNext Steps (19 June - 25 June)\n\nCombine preprocessing code: Integrate all preprocessing steps into a single file (preprocessing.qmd) and standardize all variable names.\nCreate plots for each question: Use ShinyApp to generate visualizations for each question and annotate with corresponding findings.\nIntegrate findings: Synthesize results and draw comprehensive conclusions from overlapping data.\n\n\n\nAction Items:\n\nYouting: Lead preprocessing efforts, ensuring data is clean, organized, and variables are standardized. And plot for Q2.\nAlicia: Plot results for Q1, analyze, draw conclusions and design poster.\nKeke: Plot results for Q3 and Q4, analyze, and draw conclusions.\nSchedule next meeting: Plan a follow-up meeting on 25 June to review initial findings and integrate results for the analysis section.\n\nDeadlines:\n26 June - Poster Due\n29 June - Project Submission (website, Shiny app, report)\n29 June - Poster Presentation"
  },
  {
    "objectID": "MeetingMinutes/MeetingMinutes1.html",
    "href": "MeetingMinutes/MeetingMinutes1.html",
    "title": "Meeting Minutes 1",
    "section": "",
    "text": "Meeting Minutes 1\nDate: 17 May 2024\nAttendance: All present\nProposed Project Timeline:\nWeek 1: Data Wrangling and Initial Visualizations\nMay 17 (Friday) - May 19 (Sunday): Initial Setup and Data Wrangling\n\nAlicia\n\nContinue working on cleaning and wrangling the data, focusing on date & time columns using Lubridate.\nEnsure all date columns are properly formatted and handle any remaining missing values\n\n\n\n\nKeKe\n\nValidate the integrity of the data after wrangling.\nIdentify key variables and metrics needed for the visualizations (e.g., ownership changes, transaction types).\n\nYouTing\n\nSet up the Quarto website structure if not already done.\nPrepare a detailed project plan and task breakdown for the group.\n\n\nMay 20 (Monday) - May 22 (Wednesday): Initial Visualizations\n\nAlicia\n\nCreate initial visualizations using ggplot2 or other relevant R visualization libraries.\nFocus on time series plots to show changes in corporate structures and ownership over time.\n\nKeKe\n\nDevelop network graphs to visualize relationships between entities using packages like igraph or ggraph.\nHighlight key individuals and their connections to companies.\n\nYouTing\n\nIntegrate the initial visualizations into the Quarto website.\nStart drafting the narrative for the visualizations, explaining what each one shows.\n\n\nWeek 2: Advanced Visualizations and Analysis\nMay 23 (Thursday) - May 26 (Sunday): Advanced Visualizations\n\nAlicia\n\nEnhance the visualizations by adding interactivity using Shiny\nCreate additional visualizations to highlight atypical business transactions and inferences about influence.\n\nKeKe\n\nConduct a detailed analysis of the SouthSeafood Express Corp network.\nVisualize changes in this network and identify companies that benefited from their legal troubles.\n\nYouTing\n\nGather feedback from team members and iterate on the visualizations.\nUpdate the Quarto website with new visualizations and findings.\n\n\nMay 27 (Monday) - May 30 (Thursday): Analysis and Inference\n\nAlicia\n\nPerform in-depth analysis to infer motivations behind business activities and transactions.\nDocument findings and prepare visual evidence.\n\nKeke\n\nContinue exploring suspicious transactions and potential illegal activities.\nPrepare visualizations and analysis to support these findings.\n\nYouTing\n\nIntegrate advanced visualizations and analyses into the website.\nEnsure the website is user-friendly and all visualizations are correctly embedded.\n\n\nWeek 3: Finalization and Presentation Preparation\nMay 31 (Friday) - June 4 (Tuesday): Final Touches\n\nAlicia\n\nFinalize all visualizations and ensure they are polished and accurate.\nDouble-check the data integrity and visualization accuracy.\n\nKeke\n\nConduct a thorough review of all analyses and ensure consistency.\nHelp Person A with any final touches on visualizations.\n\nYouTing\n\nFinalize the Quarto website, ensuring all sections are complete and the content flows logically.\nPrepare the written responses for each question in the assignment, ensuring they are concise and supported by visual evidence.\n\n\nJune 5 (Wednesday) - June 8 (Saturday): Poster and Presentation Preparation\n\nAlicia\n\nDesign the poster using tools like Canva or PowerPoint.\nEnsure the poster includes key visualizations, findings, and concise explanations.\n\nKeKe\n\nAssist in designing the poster.\nPrepare talking points and scripts for the presentation.\n\nYouTing\n\nOversee the poster design and ensure it aligns with the Quarto website\nPractice the presentation with the group, ensuring each member knows their role.\n\n\nJune 9 (Sunday) - June 12 (Wednesday): Final Review and Rehearsal\n\nAll Team Members\n\nConduct a full review of the website, poster, and presentation.\nRehearse the presentation multiple times to ensure smooth delivery.\nMake any necessary final adjustments based on rehearsals.\n\n\nJune 13 (Thursday) - June 14 (Friday): Buffer Days\n\nAll Team Members\n\nUse these days as buffer time for any unexpected delays or additional fine-tuning.\nEnsure everything is ready for submission by the deadline.\n\n\nJune 15 (Saturday): Submission Day\n\nAll Team Members\n\nSubmit the final Quarto website, poster, and any other required materials."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hello, we are GROUP 2!\n\nYou can find our personal webpages below:\nAlicia\nKeke\nYouTing"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Red Herring Hunt",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications - Group 2 homepage."
  },
  {
    "objectID": "MeetingMinutes/MeetingMinutes2.html",
    "href": "MeetingMinutes/MeetingMinutes2.html",
    "title": "Meeting Minutes 1",
    "section": "",
    "text": "Meeting Minutes 2\nDate: 11 June 2024\nAttendance: All present\nProposed Project Timeline:\nCurrent Status:\nAlicia: Completed Question 1\nYouTing: Completed Question 2 & 3\nKeke: Completed Question 3 & 4\nJune 11 (Tuesday) - June 8 (Saturday): Compile Questions into Website\n\nAlicia\n\nExplore possible Shiny app avenues\n\nKeKe\n\nCheck formatting and layout\n\nYouTing\n\nIn charge of compilation\n\n\nJune 16 (Sunday) - June 22 (Wednesday): Shiny App\n\nAlicia & KeKe\n\nWork on Shiny App\n\nYouTing\n\nWork on Quarto\n\n\nDeadlines:\n26 June - Poster Due\n29 June - Project Submission (website, Shiny app, report)\n29 June - Poster Presentation"
  },
  {
    "objectID": "MeetingMinutes/MeetingMinutes4.html",
    "href": "MeetingMinutes/MeetingMinutes4.html",
    "title": "Meeting Minutes 3",
    "section": "",
    "text": "Meeting Minutes 4\nDate: 25 June 2024\nAttendance: All present\nProposed Project Timeline:\nCurrent Status:\nCodes have been combined and compiled into combined.qmd\nShiny App started.\nAgenda:\n\nConfirm project title\nLook at progress and determine if re-delegation need to be done\n\nDiscussion Points:\nProject Title\n\nConfirmed to be “Red Herring Hunt”\n\nPoster\n\nKeke will write the content\nAlicia will finalise the layout and exporting\n\nShiny App\n\nYou Ting will complete it after consulting issues with Prof Kam\n\nDeadlines:\n26 June - Poster Due\n29 June - Project Submission (website, Shiny app, report)\n29 June - Poster Presentation"
  },
  {
    "objectID": "Overview/Proposal.html",
    "href": "Overview/Proposal.html",
    "title": "Proposal",
    "section": "",
    "text": "The project will focus on developing visual analytics tools using R to analyze and visualize changes in corporate structures and influence within the commercial fishing industry in Oceanus. The goal is to provide FishEye International with insights into the dynamic business environment, especially in light of the recent illegal fishing activities by SouthSeafood Express Corp.\n\n\n\n\nVisualization of Temporal Corporate Structures:\n\nDevelop visual tools to highlight changes in corporate structures over time.\nFocus on shareholder and ownership relationships.\nTrack the influence of key individuals and entities within the business network.\n\nAnalysis of Business Transactions:\n\nIdentify and visualize typical and atypical business transactions such as mergers, acquisitions, and investments.\nInfer motivations behind changes in business activities.\nHighlight how these transactions impact corporate influence and market dynamics.\n\nImpact of SouthSeafood Express Corp’s Legal Troubles:\n\nVisualize the network associated with SouthSeafood Express Corp.\nAnalyze changes in this network following the corporation’s closure due to illegal activities.\nIdentify companies that benefited from SouthSeafood Express Corp’s downfall.\nDetect other suspicious transactions potentially related to illegal fishing.\n\n\n\n\n\n\nTemporal Patterns in Corporate Structures:\n\nCreate visualizations that illustrate changes in corporate structures over time.\nHighlight the most active individuals and businesses within the network.\nExample: Timeline visualizations showing changes in ownership and shareholder relationships.\n\nTypical and Atypical Business Transactions:\n\nUse visual analytics to display examples of mergers, acquisitions, and other significant transactions.\nInfer motivations behind these transactions based on visual patterns.\nExample: Network diagrams highlighting new connections and changes in existing relationships.\nExample: Usage of widyr package to ‘casts’ a tidy dataset into a wide matrix before performing a correlation operation on it.\n\nInfluence Dynamics:\n\nDevelop a visual approach to examine how the influence of a company changes over time.\nInfer ownership or influence within the network.\nExample: Influence maps showing the rise and fall of key players in the industry. This is done through the usage of **tidygraph to create nodes and edges data appropriate for map visualisation\n\nImpact of SouthSeafood Express Corp’s Closure:\n\nVisualize the business network of SouthSeafood Express Corp before and after its closure.\nIdentify companies that gained from its legal troubles.\nDetect suspicious transactions that might indicate further illegal activities.\nExample: Comparative network analysis showing shifts in influence and ownership.\n\n\n\n\n\n\nData Collection:\n\nUse company records, ownership, shareholder information, and transaction data.\nEnsure data is cleaned and structured for further analysis.\n\nVisualization Tools:\n\nUtilize R packages such as ggplot2 for general plotting and ggraph for network visualization.\nEmploy igraph for network analysis.\nUse tidyverse for data manipulation and lubridate for handling dates and times.\n\nAnalysis Techniques:\n\nApply network analysis to detect influential individuals and companies using igraph.\nUse clustering and pattern recognition with dplyr and tidyr to identify typical and atypical transactions.\nLeverage temporal analysis to track changes and trends over time with lubridate.\n\n\n\n\n\n\nData Manipulation:\n\ndplyr: For data manipulation.\ntidyr: For tidying data and separating columns.\nreadr: For reading data files.\nlubridate: For date and time manipulation.\n\nVisualization:\n\nggplot2: For creating static visualizations.\nggraph: For creating network visualizations.\nplotly: For creating interactive visualizations.\nshiny: For developing interactive web applications.\n\nNetwork Analysis:\n\nigraph: For creating and analyzing network graphs.\n** test\n\nText Mining (if needed):\n\ntidytext: For text mining and tokenization.\ntm: For text mining."
  },
  {
    "objectID": "Overview/Proposal.html#project-topic",
    "href": "Overview/Proposal.html#project-topic",
    "title": "Proposal",
    "section": "",
    "text": "The project will focus on developing visual analytics tools using R to analyze and visualize changes in corporate structures and influence within the commercial fishing industry in Oceanus. The goal is to provide FishEye International with insights into the dynamic business environment, especially in light of the recent illegal fishing activities by SouthSeafood Express Corp."
  },
  {
    "objectID": "Overview/Proposal.html#project-scope",
    "href": "Overview/Proposal.html#project-scope",
    "title": "Proposal",
    "section": "",
    "text": "Visualization of Temporal Corporate Structures:\n\nDevelop visual tools to highlight changes in corporate structures over time.\nFocus on shareholder and ownership relationships.\nTrack the influence of key individuals and entities within the business network.\n\nAnalysis of Business Transactions:\n\nIdentify and visualize typical and atypical business transactions such as mergers, acquisitions, and investments.\nInfer motivations behind changes in business activities.\nHighlight how these transactions impact corporate influence and market dynamics.\n\nImpact of SouthSeafood Express Corp’s Legal Troubles:\n\nVisualize the network associated with SouthSeafood Express Corp.\nAnalyze changes in this network following the corporation’s closure due to illegal activities.\nIdentify companies that benefited from SouthSeafood Express Corp’s downfall.\nDetect other suspicious transactions potentially related to illegal fishing."
  },
  {
    "objectID": "Overview/Proposal.html#tasks-and-questions",
    "href": "Overview/Proposal.html#tasks-and-questions",
    "title": "Proposal",
    "section": "",
    "text": "Temporal Patterns in Corporate Structures:\n\nCreate visualizations that illustrate changes in corporate structures over time.\nHighlight the most active individuals and businesses within the network.\nExample: Timeline visualizations showing changes in ownership and shareholder relationships.\n\nTypical and Atypical Business Transactions:\n\nUse visual analytics to display examples of mergers, acquisitions, and other significant transactions.\nInfer motivations behind these transactions based on visual patterns.\nExample: Network diagrams highlighting new connections and changes in existing relationships.\nExample: Usage of widyr package to ‘casts’ a tidy dataset into a wide matrix before performing a correlation operation on it.\n\nInfluence Dynamics:\n\nDevelop a visual approach to examine how the influence of a company changes over time.\nInfer ownership or influence within the network.\nExample: Influence maps showing the rise and fall of key players in the industry. This is done through the usage of **tidygraph to create nodes and edges data appropriate for map visualisation\n\nImpact of SouthSeafood Express Corp’s Closure:\n\nVisualize the business network of SouthSeafood Express Corp before and after its closure.\nIdentify companies that gained from its legal troubles.\nDetect suspicious transactions that might indicate further illegal activities.\nExample: Comparative network analysis showing shifts in influence and ownership."
  },
  {
    "objectID": "Overview/Proposal.html#methodology",
    "href": "Overview/Proposal.html#methodology",
    "title": "Proposal",
    "section": "",
    "text": "Data Collection:\n\nUse company records, ownership, shareholder information, and transaction data.\nEnsure data is cleaned and structured for further analysis.\n\nVisualization Tools:\n\nUtilize R packages such as ggplot2 for general plotting and ggraph for network visualization.\nEmploy igraph for network analysis.\nUse tidyverse for data manipulation and lubridate for handling dates and times.\n\nAnalysis Techniques:\n\nApply network analysis to detect influential individuals and companies using igraph.\nUse clustering and pattern recognition with dplyr and tidyr to identify typical and atypical transactions.\nLeverage temporal analysis to track changes and trends over time with lubridate."
  },
  {
    "objectID": "Overview/Proposal.html#r-packages-to-use",
    "href": "Overview/Proposal.html#r-packages-to-use",
    "title": "Proposal",
    "section": "",
    "text": "Data Manipulation:\n\ndplyr: For data manipulation.\ntidyr: For tidying data and separating columns.\nreadr: For reading data files.\nlubridate: For date and time manipulation.\n\nVisualization:\n\nggplot2: For creating static visualizations.\nggraph: For creating network visualizations.\nplotly: For creating interactive visualizations.\nshiny: For developing interactive web applications.\n\nNetwork Analysis:\n\nigraph: For creating and analyzing network graphs.\n** test\n\nText Mining (if needed):\n\ntidytext: For text mining and tokenization.\ntm: For text mining."
  },
  {
    "objectID": "Task/combined.html",
    "href": "Task/combined.html",
    "title": "Main solution",
    "section": "",
    "text": "Note: Ensure that the pacman package has already been installed.\nThe following R packages will be used:\n\ntidytext\ntidyverse\nreadtext\nquanteda\njsonlite\nigraph\ntidygraph\nggraph\nvisNetwork\nclock\ngraphlayouts\nplotly\nggiraph\n\n\npacman::p_load(tidytext, readtext, quanteda, tidyverse, jsonlite, igraph, tidygraph, ggraph, visNetwork, clock, graphlayouts,plotly,ggiraph)\n\n\n\n\nDirect import of the mc3.json file shows an error message indicating that there’s an invalid character in the JSON text, specifically “NaN”. As “NaN” is not recognised as a valid value, preprocessing of the JSON file to replace “NaN” is required.\nIn the code chunk below, mc3.json is first imported, then all instances of “NaN” are replaced with “null”, and the processed file is written into a json file mc3_fixed.json for later use.\n\n# Read the JSON file as text\njson_text &lt;- readLines(\"data/mc3.json\")\n\nWarning in readLines(\"data/mc3.json\"): incomplete final line found on\n'data/mc3.json'\n\n# Replace \"NaN\" with \"null\"\njson_text_fixed &lt;- gsub(\"NaN\", \"null\", json_text)\n\n# Write the fixed JSON text back to a file\nwriteLines(json_text_fixed, \"data/mc3_fixed.json\")\n\nImporting preprocessed mc3_fixed.json file\n\nmc3_data &lt;- fromJSON(\"data/mc3_fixed.json\")\n\nCheck dataframe\n\nOpens new tabs within R workspace, not shown in website\nExample of the view is shown in the screenshot tab below\n\n\nCodeScreenshot Example\n\n\n\nview(mc3_data[[\"nodes\"]])\nview(mc3_data[[\"links\"]])\n\n\n\nmc3_data[[“nodes’]\n\n\nmc3_data[[“links”]]\n\n\n\n\n\nView dataframe\n\nSimilar info as shown above\n\n\nglimpse(mc3_data)\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     : Named list()\n $ nodes     :'data.frame': 60520 obs. of  15 variables:\n  ..$ type             : chr [1:60520] \"Entity.Organization.Company\" \"Entity.Organization.Company\" \"Entity.Organization.Company\" \"Entity.Organization.Company\" ...\n  ..$ country          : chr [1:60520] \"Uziland\" \"Mawalara\" \"Uzifrica\" \"Islavaragon\" ...\n  ..$ ProductServices  : chr [1:60520] \"Unknown\" \"Furniture and home accessories\" \"Food products\" \"Unknown\" ...\n  ..$ PointOfContact   : chr [1:60520] \"Rebecca Lewis\" \"Michael Lopez\" \"Steven Robertson\" \"Anthony Wyatt\" ...\n  ..$ HeadOfOrg        : chr [1:60520] \"Émilie-Susan Benoit\" \"Honoré Lemoine\" \"Jules Labbé\" \"Dr. Víctor Hurtado\" ...\n  ..$ founding_date    : chr [1:60520] \"1954-04-24T00:00:00\" \"2009-06-12T00:00:00\" \"2029-12-15T00:00:00\" \"1972-02-16T00:00:00\" ...\n  ..$ revenue          : num [1:60520] 5995 71767 0 0 4747 ...\n  ..$ TradeDescription : chr [1:60520] \"Unknown\" \"Abbott-Gomez is a leading manufacturer and supplier of high-quality furniture and home accessories, catering to\"| __truncated__ \"Abbott-Harrison is a leading manufacturer of high-quality food products, including baked goods, snacks, and bev\"| __truncated__ \"Unknown\" ...\n  ..$ _last_edited_by  : chr [1:60520] \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" ...\n  ..$ _last_edited_date: chr [1:60520] \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _date_added      : chr [1:60520] \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _raw_source      : chr [1:60520] \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" ...\n  ..$ _algorithm       : chr [1:60520] \"Automatic Import\" \"Automatic Import\" \"Automatic Import\" \"Automatic Import\" ...\n  ..$ id               : chr [1:60520] \"Abbott, Mcbride and Edwards\" \"Abbott-Gomez\" \"Abbott-Harrison\" \"Abbott-Ibarra\" ...\n  ..$ dob              : chr [1:60520] NA NA NA NA ...\n $ links     :'data.frame': 75817 obs. of  11 variables:\n  ..$ start_date       : chr [1:75817] \"2016-10-29T00:00:00\" \"2035-06-03T00:00:00\" \"2028-11-20T00:00:00\" \"2024-09-04T00:00:00\" ...\n  ..$ type             : chr [1:75817] \"Event.Owns.Shareholdership\" \"Event.Owns.Shareholdership\" \"Event.Owns.Shareholdership\" \"Event.Owns.Shareholdership\" ...\n  ..$ _last_edited_by  : chr [1:75817] \"Pelagia Alethea Mordoch\" \"Niklaus Oberon\" \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" ...\n  ..$ _last_edited_date: chr [1:75817] \"2035-01-01T00:00:00\" \"2035-07-15T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _date_added      : chr [1:75817] \"2035-01-01T00:00:00\" \"2035-07-15T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _raw_source      : chr [1:75817] \"Existing Corporate Structure Data\" \"Oceanus Corporations Monthly - Jun '35\" \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" ...\n  ..$ _algorithm       : chr [1:75817] \"Automatic Import\" \"Manual Entry\" \"Automatic Import\" \"Automatic Import\" ...\n  ..$ source           : chr [1:75817] \"Avery Inc\" \"Berger-Hayes\" \"Bowers Group\" \"Bowman-Howe\" ...\n  ..$ target           : chr [1:75817] \"Allen, Nichols and Thompson\" \"Jensen, Morris and Downs\" \"Barnett Inc\" \"Bennett Ltd\" ...\n  ..$ key              : int [1:75817] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ end_date         : chr [1:75817] NA NA NA NA ...\n\n\n\n\n\n\n\n\nNote\n\n\n\nmc3_date[[“nodes”]] dataframe contains 15 columns and 60520 rows.\nmc3_date[[“links”]] dataframe contains 11 columns and 75817 rows.\n\n\n\n\n\n\n\n\nNote\n\n\n\nOn closer inspection of mc3_data, we note some issues to be rectified:\n\nColumns containing dates are treated as “Character” data type instead of date data type, which is incorrect. Thus, the data type of the following fields need to be changed to “Date”” data type:\n\nfounding_date\n_last_edited_date\n_date_added\nstart_date\n_last_edited_date\n_date_added\ndob\n\nSome columns have missing values, which need to be handled appropriately for ease of later analysis.\nSome columns are prefixed with “_”, we remove them to reduce chance of bugs later\n\n\n\n\n\n\nIdentify the percentage of missing values within the dataset\n\n# Function to calculate missing value percentages\ncalculate_missing_percentage &lt;- function(df) {\n  total_values &lt;- nrow(df) * ncol(df)\n  missing_values &lt;- sum(is.na(df))\n  missing_percentage &lt;- (missing_values / total_values) * 100\n  return(missing_percentage)\n}\n\n\nNodesLinks\n\n\n\nnodes_missing_percentage &lt;- calculate_missing_percentage(mc3_data[[\"nodes\"]])\nnodes_missing_percentage\n\n[1] 35.11952\n\nnodes_missing_by_column &lt;- sapply(mc3_data[[\"nodes\"]], function(x) sum(is.na(x)) / length(x) * 100)\nnodes_missing_by_column\n\n             type           country   ProductServices    PointOfContact \n          0.00000           0.00000          85.34204          85.38334 \n        HeadOfOrg     founding_date           revenue  TradeDescription \n         85.35691          85.34204          85.36847          85.34204 \n  _last_edited_by _last_edited_date       _date_added       _raw_source \n          0.00000           0.00000           0.00000           0.00000 \n       _algorithm                id               dob \n          0.00000           0.00000          14.65796 \n\n\n\n\n\nlinks_missing_percentage &lt;- calculate_missing_percentage(mc3_data[[\"links\"]])\nlinks_missing_percentage\n\n[1] 9.059973\n\nlinks_missing_by_column &lt;- sapply(mc3_data[[\"links\"]], function(x) sum(is.na(x)) / length(x) * 100)\nlinks_missing_by_column\n\n       start_date              type   _last_edited_by _last_edited_date \n        0.1187069         0.0000000         0.0000000         0.0000000 \n      _date_added       _raw_source        _algorithm            source \n        0.0000000         0.0000000         0.0000000         0.0000000 \n           target               key          end_date \n        0.0000000         0.0000000        99.5410000 \n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNodes: Overall, there are 35.12% missing values. While most columns have no missing values, the majority of those with missing data pertain to optional attributes:\n\nProductServices (Optional) - 85.34%\nPointOfContact (Optional)- 85.38%\nHeadofOrg (Optional) - 85.36%\nfounding_date - 85.34%\nrevenue (Optional) - 85.37%\nTradeDescription (Optional) - 85.34%\ndob - 14.66%\n\nLinks: Overall, there are 9.06% missing values. Most of the columns do not contain missing values, except for:\n\nstart_date - 0.12%\nend_date (Optional) - 99.54%\n\nIn addition, according to the VAST2024 - MC3 Data Description file, all empty values in the revenue column are supposed to have been set to 0. However, there are still some values with “NA”.\n\n\n\n\n\nSet NA values to 0 to aid analysis\n\n# Create a copy of mc3_data\nmc3_data2 &lt;- mc3_data\n\n# Set empty values in revenue to 0 and save it to the new list\nmc3_data2$nodes$revenue &lt;- ifelse(is.na(mc3_data2$nodes$revenue) | mc3_data2$nodes$revenue == \"\", 0, mc3_data2$nodes$revenue)\n\nVerify changes\n\n# ensure no more missing values in revenue column\nsum(is.na(mc3_data2$nodes$revenue))\n\n[1] 0\n\n\n\n\n\nRemove prefix “_” from columns to reduce chance of issues later\n\n# Function to remove leading underscores from column names\nremove_leading_underscores &lt;- function(df) {\n  colnames(df) &lt;- gsub(\"^_\", \"\", colnames(df))\n  return(df)\n}\n\n# Create a copy of mc3_data2 and name it mc3_data3\nmc3_data3 &lt;- mc3_data2\n\n# Apply the function to the nodes and links data frames in mc3_data3\nmc3_data3$nodes &lt;- remove_leading_underscores(mc3_data3$nodes)\nmc3_data3$links &lt;- remove_leading_underscores(mc3_data3$links)\n\nVerify changes\n\ncolnames(mc3_data3$nodes)\n\n [1] \"type\"             \"country\"          \"ProductServices\"  \"PointOfContact\"  \n [5] \"HeadOfOrg\"        \"founding_date\"    \"revenue\"          \"TradeDescription\"\n [9] \"last_edited_by\"   \"last_edited_date\" \"date_added\"       \"raw_source\"      \n[13] \"algorithm\"        \"id\"               \"dob\"             \n\ncolnames(mc3_data3$links)\n\n [1] \"start_date\"       \"type\"             \"last_edited_by\"   \"last_edited_date\"\n [5] \"date_added\"       \"raw_source\"       \"algorithm\"        \"source\"          \n [9] \"target\"           \"key\"              \"end_date\"        \n\n\n\n\n\nIn preparation for temporal analysis\n\n# Create a copy of mc3_data3 and name it mc3_data4\nmc3_data4 &lt;- mc3_data3\n\n# Convert date columns to Date-Time type\nmc3_data4$nodes &lt;- mc3_data4$nodes %&gt;%\n  mutate(\n    founding_date = ymd_hms(founding_date),\n    last_edited_date = ymd_hms(last_edited_date),\n    date_added = ymd_hms(date_added),\n    dob = ymd_hms(dob)\n  )\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `dob = ymd_hms(dob)`.\nCaused by warning:\n!  176 failed to parse.\n\nmc3_data4$links &lt;- mc3_data4$links %&gt;%\n  mutate(\n    start_date = ymd_hms(start_date),\n    last_edited_date = ymd_hms(last_edited_date),\n    date_added = ymd_hms(date_added),\n    end_date = ymd_hms(end_date)\n  )\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `start_date = ymd_hms(start_date)`.\nCaused by warning:\n!  14630 failed to parse.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe ymd_hms function is designed to work with character vectors and will return NA for any existing NA values. This means that any NA value in the original columns will remain NA after the conversion.\n\n\nVerify changes\n\n# View the first few rows of the date columns in nodes\nhead(mc3_data4$nodes %&gt;% select(founding_date, last_edited_date, date_added, dob))\n\n  founding_date last_edited_date date_added  dob\n1    1954-04-24       2035-01-01 2035-01-01 &lt;NA&gt;\n2    2009-06-12       2035-01-01 2035-01-01 &lt;NA&gt;\n3    2029-12-15       2035-01-01 2035-01-01 &lt;NA&gt;\n4    1972-02-16       2035-01-01 2035-01-01 &lt;NA&gt;\n5    1954-04-06       2035-01-01 2035-01-01 &lt;NA&gt;\n6    2031-09-30       2035-01-01 2035-01-01 &lt;NA&gt;\n\n# View the first few rows of the date columns in links\nhead(mc3_data4$links %&gt;% select(start_date))\n\n  start_date\n1 2016-10-29\n2 2035-06-03\n3 2028-11-20\n4 2024-09-04\n5 2034-11-12\n6 2007-04-06\n\n# Summary of date columns in nodes\nsummary(mc3_data4$nodes %&gt;% select(founding_date, last_edited_date, date_added, dob))\n\n founding_date                     last_edited_date               \n Min.   :1945-01-01 00:00:00.000   Min.   :2035-01-01 00:00:00.0  \n 1st Qu.:1968-01-11 00:00:00.000   1st Qu.:2035-01-01 00:00:00.0  \n Median :1991-07-03 00:00:00.000   Median :2035-01-01 00:00:00.0  \n Mean   :1991-04-22 15:54:58.072   Mean   :2035-01-02 10:34:13.4  \n 3rd Qu.:2014-09-04 12:00:00.000   3rd Qu.:2035-01-01 00:00:00.0  \n Max.   :2035-12-29 00:00:00.000   Max.   :2036-01-15 00:00:00.0  \n NA's   :51649                                                    \n   date_added                         dob                         \n Min.   :2035-01-01 00:00:00.0   Min.   :1970-01-02 00:00:00.000  \n 1st Qu.:2035-01-01 00:00:00.0   1st Qu.:1978-01-30 00:00:00.000  \n Median :2035-01-01 00:00:00.0   Median :1986-02-06 00:00:00.000  \n Mean   :2035-01-02 10:28:32.2   Mean   :1987-05-23 22:21:33.182  \n 3rd Qu.:2035-01-01 00:00:00.0   3rd Qu.:1995-05-13 00:00:00.000  \n Max.   :2036-01-15 00:00:00.0   Max.   :2017-03-20 00:00:00.000  \n                                 NA's   :9047                     \n\n# Summary of date columns in links\nsummary(mc3_data4$links %&gt;% select(start_date))\n\n   start_date                    \n Min.   :1952-05-31 00:00:00.00  \n 1st Qu.:2015-08-18 00:00:00.00  \n Median :2024-03-22 00:00:00.00  \n Mean   :2022-11-23 10:50:43.11  \n 3rd Qu.:2030-12-13 00:00:00.00  \n Max.   :2035-12-29 00:00:00.00  \n NA's   :14720                   \n\n# Check the types of the date columns in nodes\nstr(mc3_data4$nodes %&gt;% select(founding_date, last_edited_date, date_added, dob))\n\n'data.frame':   60520 obs. of  4 variables:\n $ founding_date   : POSIXct, format: \"1954-04-24\" \"2009-06-12\" ...\n $ last_edited_date: POSIXct, format: \"2035-01-01\" \"2035-01-01\" ...\n $ date_added      : POSIXct, format: \"2035-01-01\" \"2035-01-01\" ...\n $ dob             : POSIXct, format: NA NA ...\n\n# Check the types of the date columns in links\nstr(mc3_data4$links %&gt;% select(start_date))\n\n'data.frame':   75817 obs. of  1 variable:\n $ start_date: POSIXct, format: \"2016-10-29\" \"2035-06-03\" ...\n\n\n\nview(mc3_data4[[\"nodes\"]])\nview(mc3_data4[[\"links\"]])\n\n\n\n\nThe steps below will be used to split text in type column of nodes into two columns: namely type1 and type2.\n\n# Make a copy of mc3_data4\nmc3_data5 &lt;- mc3_data4\n\n# Split the type column into two columns\nmc3_data5$nodes &lt;- mc3_data5$nodes %&gt;%\n  mutate(\n    type1 = sub(\"^(\\\\S+).*\", \"\\\\1\", type),\n    type2 = sub(\"^\\\\S+\\\\.(.*)\", \"\\\\1\", type)\n  )\n\n# If there's only one word in type, set type2 to NA\nmc3_data5$nodes$type2 &lt;- ifelse(grepl(\"\\\\.\", mc3_data5$nodes$type), mc3_data5$nodes$type2, NA)\n\n# Remove the original 'type' column\nmc3_data5$nodes &lt;- mc3_data5$nodes %&gt;%\n  select(-type)\n\nThe steps below will be used to split text in type column of links into two columns: namely type1 and type2.\n\n# Make a copy of mc3_data4\nmc3_data6 &lt;- mc3_data5\n\n# Split the type column into two columns\n# There are no special cases, exception left blank\nmc3_data6$links &lt;- mc3_data6$links %&gt;%\n  mutate(\n    type1 = sub(\"(.*?\\\\..*?)(\\\\.[^.]+)?$\", \"\\\\1\", type),\n    type2 = ifelse(grepl(\"\\\\.\", type), sub(\".*\\\\.\", \"\", type), \"\")\n  )\n\n# remove the original 'type' column\nmc3_data6$links &lt;- mc3_data6$links %&gt;%\n  select(-type)\n\nVerify changes\n\n# View the first few rows of the type columns in nodes\nhead(mc3_data6$nodes %&gt;% select(type1,type2))\n\n                        type1   type2\n1 Entity.Organization.Company Company\n2 Entity.Organization.Company Company\n3 Entity.Organization.Company Company\n4 Entity.Organization.Company Company\n5 Entity.Organization.Company Company\n6 Entity.Organization.Company Company\n\n# View the first few rows of the type columns in links\nhead(mc3_data6$links %&gt;% select(type1,type2))\n\n       type1           type2\n1 Event.Owns Shareholdership\n2 Event.Owns Shareholdership\n3 Event.Owns Shareholdership\n4 Event.Owns Shareholdership\n5 Event.Owns Shareholdership\n6 Event.Owns Shareholdership\n\n\n\nview(mc3_data6[[\"nodes\"]])\nview(mc3_data6[[\"links\"]])\n\n\n\n\nFor Question 1\n\n#keep only necessary columns\nmc3_nodes_1 &lt;- as_tibble(mc3_data6$nodes) %&gt;%\n  select (-TradeDescription,\n          -last_edited_by,\n          -last_edited_date,\n          -algorithm,\n          -dob,\n          -type1)\n\nSave as rds file for future use\n\nwrite_rds(mc3_nodes_1, \"data/rds/mc3_nodes_1.rds\")\n\n\n\n\nFor Question 1\n\nmc3_links_1 &lt;- as_tibble(mc3_data6$links) %&gt;%\n  select (-last_edited_by,\n          -last_edited_date,\n          -date_added,\n          -key,\n          -algorithm,\n          -type1,\n          -end_date)\n\nSave as rds file for future use\n\nwrite_rds(mc3_links_1, \"data/rds/mc3_links_1.rds\")"
  },
  {
    "objectID": "Task/combined.html#installing-and-loading-the-required-libraries",
    "href": "Task/combined.html#installing-and-loading-the-required-libraries",
    "title": "Main solution",
    "section": "",
    "text": "Note: Ensure that the pacman package has already been installed.\nThe following R packages will be used:\n\ntidytext\ntidyverse\nreadtext\nquanteda\njsonlite\nigraph\ntidygraph\nggraph\nvisNetwork\nclock\ngraphlayouts\nplotly\nggiraph\n\n\npacman::p_load(tidytext, readtext, quanteda, tidyverse, jsonlite, igraph, tidygraph, ggraph, visNetwork, clock, graphlayouts,plotly,ggiraph)"
  },
  {
    "objectID": "Task/combined.html#importing-json-file",
    "href": "Task/combined.html#importing-json-file",
    "title": "Main solution",
    "section": "",
    "text": "Direct import of the mc3.json file shows an error message indicating that there’s an invalid character in the JSON text, specifically “NaN”. As “NaN” is not recognised as a valid value, preprocessing of the JSON file to replace “NaN” is required.\nIn the code chunk below, mc3.json is first imported, then all instances of “NaN” are replaced with “null”, and the processed file is written into a json file mc3_fixed.json for later use.\n\n# Read the JSON file as text\njson_text &lt;- readLines(\"data/mc3.json\")\n\nWarning in readLines(\"data/mc3.json\"): incomplete final line found on\n'data/mc3.json'\n\n# Replace \"NaN\" with \"null\"\njson_text_fixed &lt;- gsub(\"NaN\", \"null\", json_text)\n\n# Write the fixed JSON text back to a file\nwriteLines(json_text_fixed, \"data/mc3_fixed.json\")\n\nImporting preprocessed mc3_fixed.json file\n\nmc3_data &lt;- fromJSON(\"data/mc3_fixed.json\")\n\nCheck dataframe\n\nOpens new tabs within R workspace, not shown in website\nExample of the view is shown in the screenshot tab below\n\n\nCodeScreenshot Example\n\n\n\nview(mc3_data[[\"nodes\"]])\nview(mc3_data[[\"links\"]])\n\n\n\nmc3_data[[“nodes’]\n\n\nmc3_data[[“links”]]\n\n\n\n\n\nView dataframe\n\nSimilar info as shown above\n\n\nglimpse(mc3_data)\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     : Named list()\n $ nodes     :'data.frame': 60520 obs. of  15 variables:\n  ..$ type             : chr [1:60520] \"Entity.Organization.Company\" \"Entity.Organization.Company\" \"Entity.Organization.Company\" \"Entity.Organization.Company\" ...\n  ..$ country          : chr [1:60520] \"Uziland\" \"Mawalara\" \"Uzifrica\" \"Islavaragon\" ...\n  ..$ ProductServices  : chr [1:60520] \"Unknown\" \"Furniture and home accessories\" \"Food products\" \"Unknown\" ...\n  ..$ PointOfContact   : chr [1:60520] \"Rebecca Lewis\" \"Michael Lopez\" \"Steven Robertson\" \"Anthony Wyatt\" ...\n  ..$ HeadOfOrg        : chr [1:60520] \"Émilie-Susan Benoit\" \"Honoré Lemoine\" \"Jules Labbé\" \"Dr. Víctor Hurtado\" ...\n  ..$ founding_date    : chr [1:60520] \"1954-04-24T00:00:00\" \"2009-06-12T00:00:00\" \"2029-12-15T00:00:00\" \"1972-02-16T00:00:00\" ...\n  ..$ revenue          : num [1:60520] 5995 71767 0 0 4747 ...\n  ..$ TradeDescription : chr [1:60520] \"Unknown\" \"Abbott-Gomez is a leading manufacturer and supplier of high-quality furniture and home accessories, catering to\"| __truncated__ \"Abbott-Harrison is a leading manufacturer of high-quality food products, including baked goods, snacks, and bev\"| __truncated__ \"Unknown\" ...\n  ..$ _last_edited_by  : chr [1:60520] \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" ...\n  ..$ _last_edited_date: chr [1:60520] \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _date_added      : chr [1:60520] \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _raw_source      : chr [1:60520] \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" ...\n  ..$ _algorithm       : chr [1:60520] \"Automatic Import\" \"Automatic Import\" \"Automatic Import\" \"Automatic Import\" ...\n  ..$ id               : chr [1:60520] \"Abbott, Mcbride and Edwards\" \"Abbott-Gomez\" \"Abbott-Harrison\" \"Abbott-Ibarra\" ...\n  ..$ dob              : chr [1:60520] NA NA NA NA ...\n $ links     :'data.frame': 75817 obs. of  11 variables:\n  ..$ start_date       : chr [1:75817] \"2016-10-29T00:00:00\" \"2035-06-03T00:00:00\" \"2028-11-20T00:00:00\" \"2024-09-04T00:00:00\" ...\n  ..$ type             : chr [1:75817] \"Event.Owns.Shareholdership\" \"Event.Owns.Shareholdership\" \"Event.Owns.Shareholdership\" \"Event.Owns.Shareholdership\" ...\n  ..$ _last_edited_by  : chr [1:75817] \"Pelagia Alethea Mordoch\" \"Niklaus Oberon\" \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" ...\n  ..$ _last_edited_date: chr [1:75817] \"2035-01-01T00:00:00\" \"2035-07-15T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _date_added      : chr [1:75817] \"2035-01-01T00:00:00\" \"2035-07-15T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _raw_source      : chr [1:75817] \"Existing Corporate Structure Data\" \"Oceanus Corporations Monthly - Jun '35\" \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" ...\n  ..$ _algorithm       : chr [1:75817] \"Automatic Import\" \"Manual Entry\" \"Automatic Import\" \"Automatic Import\" ...\n  ..$ source           : chr [1:75817] \"Avery Inc\" \"Berger-Hayes\" \"Bowers Group\" \"Bowman-Howe\" ...\n  ..$ target           : chr [1:75817] \"Allen, Nichols and Thompson\" \"Jensen, Morris and Downs\" \"Barnett Inc\" \"Bennett Ltd\" ...\n  ..$ key              : int [1:75817] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ end_date         : chr [1:75817] NA NA NA NA ...\n\n\n\n\n\n\n\n\nNote\n\n\n\nmc3_date[[“nodes”]] dataframe contains 15 columns and 60520 rows.\nmc3_date[[“links”]] dataframe contains 11 columns and 75817 rows.\n\n\n\n\n\n\n\n\nNote\n\n\n\nOn closer inspection of mc3_data, we note some issues to be rectified:\n\nColumns containing dates are treated as “Character” data type instead of date data type, which is incorrect. Thus, the data type of the following fields need to be changed to “Date”” data type:\n\nfounding_date\n_last_edited_date\n_date_added\nstart_date\n_last_edited_date\n_date_added\ndob\n\nSome columns have missing values, which need to be handled appropriately for ease of later analysis.\nSome columns are prefixed with “_”, we remove them to reduce chance of bugs later"
  },
  {
    "objectID": "Task/combined.html#missing-values",
    "href": "Task/combined.html#missing-values",
    "title": "Main solution",
    "section": "",
    "text": "Identify the percentage of missing values within the dataset\n\n# Function to calculate missing value percentages\ncalculate_missing_percentage &lt;- function(df) {\n  total_values &lt;- nrow(df) * ncol(df)\n  missing_values &lt;- sum(is.na(df))\n  missing_percentage &lt;- (missing_values / total_values) * 100\n  return(missing_percentage)\n}\n\n\nNodesLinks\n\n\n\nnodes_missing_percentage &lt;- calculate_missing_percentage(mc3_data[[\"nodes\"]])\nnodes_missing_percentage\n\n[1] 35.11952\n\nnodes_missing_by_column &lt;- sapply(mc3_data[[\"nodes\"]], function(x) sum(is.na(x)) / length(x) * 100)\nnodes_missing_by_column\n\n             type           country   ProductServices    PointOfContact \n          0.00000           0.00000          85.34204          85.38334 \n        HeadOfOrg     founding_date           revenue  TradeDescription \n         85.35691          85.34204          85.36847          85.34204 \n  _last_edited_by _last_edited_date       _date_added       _raw_source \n          0.00000           0.00000           0.00000           0.00000 \n       _algorithm                id               dob \n          0.00000           0.00000          14.65796 \n\n\n\n\n\nlinks_missing_percentage &lt;- calculate_missing_percentage(mc3_data[[\"links\"]])\nlinks_missing_percentage\n\n[1] 9.059973\n\nlinks_missing_by_column &lt;- sapply(mc3_data[[\"links\"]], function(x) sum(is.na(x)) / length(x) * 100)\nlinks_missing_by_column\n\n       start_date              type   _last_edited_by _last_edited_date \n        0.1187069         0.0000000         0.0000000         0.0000000 \n      _date_added       _raw_source        _algorithm            source \n        0.0000000         0.0000000         0.0000000         0.0000000 \n           target               key          end_date \n        0.0000000         0.0000000        99.5410000 \n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNodes: Overall, there are 35.12% missing values. While most columns have no missing values, the majority of those with missing data pertain to optional attributes:\n\nProductServices (Optional) - 85.34%\nPointOfContact (Optional)- 85.38%\nHeadofOrg (Optional) - 85.36%\nfounding_date - 85.34%\nrevenue (Optional) - 85.37%\nTradeDescription (Optional) - 85.34%\ndob - 14.66%\n\nLinks: Overall, there are 9.06% missing values. Most of the columns do not contain missing values, except for:\n\nstart_date - 0.12%\nend_date (Optional) - 99.54%\n\nIn addition, according to the VAST2024 - MC3 Data Description file, all empty values in the revenue column are supposed to have been set to 0. However, there are still some values with “NA”."
  },
  {
    "objectID": "Task/combined.html#setting-empty-values-in-revenue-to-0",
    "href": "Task/combined.html#setting-empty-values-in-revenue-to-0",
    "title": "Main solution",
    "section": "",
    "text": "Set NA values to 0 to aid analysis\n\n# Create a copy of mc3_data\nmc3_data2 &lt;- mc3_data\n\n# Set empty values in revenue to 0 and save it to the new list\nmc3_data2$nodes$revenue &lt;- ifelse(is.na(mc3_data2$nodes$revenue) | mc3_data2$nodes$revenue == \"\", 0, mc3_data2$nodes$revenue)\n\nVerify changes\n\n# ensure no more missing values in revenue column\nsum(is.na(mc3_data2$nodes$revenue))\n\n[1] 0"
  },
  {
    "objectID": "Task/combined.html#rename-columns",
    "href": "Task/combined.html#rename-columns",
    "title": "Main solution",
    "section": "",
    "text": "Remove prefix “_” from columns to reduce chance of issues later\n\n# Function to remove leading underscores from column names\nremove_leading_underscores &lt;- function(df) {\n  colnames(df) &lt;- gsub(\"^_\", \"\", colnames(df))\n  return(df)\n}\n\n# Create a copy of mc3_data2 and name it mc3_data3\nmc3_data3 &lt;- mc3_data2\n\n# Apply the function to the nodes and links data frames in mc3_data3\nmc3_data3$nodes &lt;- remove_leading_underscores(mc3_data3$nodes)\nmc3_data3$links &lt;- remove_leading_underscores(mc3_data3$links)\n\nVerify changes\n\ncolnames(mc3_data3$nodes)\n\n [1] \"type\"             \"country\"          \"ProductServices\"  \"PointOfContact\"  \n [5] \"HeadOfOrg\"        \"founding_date\"    \"revenue\"          \"TradeDescription\"\n [9] \"last_edited_by\"   \"last_edited_date\" \"date_added\"       \"raw_source\"      \n[13] \"algorithm\"        \"id\"               \"dob\"             \n\ncolnames(mc3_data3$links)\n\n [1] \"start_date\"       \"type\"             \"last_edited_by\"   \"last_edited_date\"\n [5] \"date_added\"       \"raw_source\"       \"algorithm\"        \"source\"          \n [9] \"target\"           \"key\"              \"end_date\""
  },
  {
    "objectID": "Task/combined.html#standardising-date-time-formats",
    "href": "Task/combined.html#standardising-date-time-formats",
    "title": "Main solution",
    "section": "",
    "text": "In preparation for temporal analysis\n\n# Create a copy of mc3_data3 and name it mc3_data4\nmc3_data4 &lt;- mc3_data3\n\n# Convert date columns to Date-Time type\nmc3_data4$nodes &lt;- mc3_data4$nodes %&gt;%\n  mutate(\n    founding_date = ymd_hms(founding_date),\n    last_edited_date = ymd_hms(last_edited_date),\n    date_added = ymd_hms(date_added),\n    dob = ymd_hms(dob)\n  )\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `dob = ymd_hms(dob)`.\nCaused by warning:\n!  176 failed to parse.\n\nmc3_data4$links &lt;- mc3_data4$links %&gt;%\n  mutate(\n    start_date = ymd_hms(start_date),\n    last_edited_date = ymd_hms(last_edited_date),\n    date_added = ymd_hms(date_added),\n    end_date = ymd_hms(end_date)\n  )\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `start_date = ymd_hms(start_date)`.\nCaused by warning:\n!  14630 failed to parse.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe ymd_hms function is designed to work with character vectors and will return NA for any existing NA values. This means that any NA value in the original columns will remain NA after the conversion.\n\n\nVerify changes\n\n# View the first few rows of the date columns in nodes\nhead(mc3_data4$nodes %&gt;% select(founding_date, last_edited_date, date_added, dob))\n\n  founding_date last_edited_date date_added  dob\n1    1954-04-24       2035-01-01 2035-01-01 &lt;NA&gt;\n2    2009-06-12       2035-01-01 2035-01-01 &lt;NA&gt;\n3    2029-12-15       2035-01-01 2035-01-01 &lt;NA&gt;\n4    1972-02-16       2035-01-01 2035-01-01 &lt;NA&gt;\n5    1954-04-06       2035-01-01 2035-01-01 &lt;NA&gt;\n6    2031-09-30       2035-01-01 2035-01-01 &lt;NA&gt;\n\n# View the first few rows of the date columns in links\nhead(mc3_data4$links %&gt;% select(start_date))\n\n  start_date\n1 2016-10-29\n2 2035-06-03\n3 2028-11-20\n4 2024-09-04\n5 2034-11-12\n6 2007-04-06\n\n# Summary of date columns in nodes\nsummary(mc3_data4$nodes %&gt;% select(founding_date, last_edited_date, date_added, dob))\n\n founding_date                     last_edited_date               \n Min.   :1945-01-01 00:00:00.000   Min.   :2035-01-01 00:00:00.0  \n 1st Qu.:1968-01-11 00:00:00.000   1st Qu.:2035-01-01 00:00:00.0  \n Median :1991-07-03 00:00:00.000   Median :2035-01-01 00:00:00.0  \n Mean   :1991-04-22 15:54:58.072   Mean   :2035-01-02 10:34:13.4  \n 3rd Qu.:2014-09-04 12:00:00.000   3rd Qu.:2035-01-01 00:00:00.0  \n Max.   :2035-12-29 00:00:00.000   Max.   :2036-01-15 00:00:00.0  \n NA's   :51649                                                    \n   date_added                         dob                         \n Min.   :2035-01-01 00:00:00.0   Min.   :1970-01-02 00:00:00.000  \n 1st Qu.:2035-01-01 00:00:00.0   1st Qu.:1978-01-30 00:00:00.000  \n Median :2035-01-01 00:00:00.0   Median :1986-02-06 00:00:00.000  \n Mean   :2035-01-02 10:28:32.2   Mean   :1987-05-23 22:21:33.182  \n 3rd Qu.:2035-01-01 00:00:00.0   3rd Qu.:1995-05-13 00:00:00.000  \n Max.   :2036-01-15 00:00:00.0   Max.   :2017-03-20 00:00:00.000  \n                                 NA's   :9047                     \n\n# Summary of date columns in links\nsummary(mc3_data4$links %&gt;% select(start_date))\n\n   start_date                    \n Min.   :1952-05-31 00:00:00.00  \n 1st Qu.:2015-08-18 00:00:00.00  \n Median :2024-03-22 00:00:00.00  \n Mean   :2022-11-23 10:50:43.11  \n 3rd Qu.:2030-12-13 00:00:00.00  \n Max.   :2035-12-29 00:00:00.00  \n NA's   :14720                   \n\n# Check the types of the date columns in nodes\nstr(mc3_data4$nodes %&gt;% select(founding_date, last_edited_date, date_added, dob))\n\n'data.frame':   60520 obs. of  4 variables:\n $ founding_date   : POSIXct, format: \"1954-04-24\" \"2009-06-12\" ...\n $ last_edited_date: POSIXct, format: \"2035-01-01\" \"2035-01-01\" ...\n $ date_added      : POSIXct, format: \"2035-01-01\" \"2035-01-01\" ...\n $ dob             : POSIXct, format: NA NA ...\n\n# Check the types of the date columns in links\nstr(mc3_data4$links %&gt;% select(start_date))\n\n'data.frame':   75817 obs. of  1 variable:\n $ start_date: POSIXct, format: \"2016-10-29\" \"2035-06-03\" ...\n\n\n\nview(mc3_data4[[\"nodes\"]])\nview(mc3_data4[[\"links\"]])"
  },
  {
    "objectID": "Task/combined.html#split-words",
    "href": "Task/combined.html#split-words",
    "title": "Main solution",
    "section": "",
    "text": "The steps below will be used to split text in type column of nodes into two columns: namely type1 and type2.\n\n# Make a copy of mc3_data4\nmc3_data5 &lt;- mc3_data4\n\n# Split the type column into two columns\nmc3_data5$nodes &lt;- mc3_data5$nodes %&gt;%\n  mutate(\n    type1 = sub(\"^(\\\\S+).*\", \"\\\\1\", type),\n    type2 = sub(\"^\\\\S+\\\\.(.*)\", \"\\\\1\", type)\n  )\n\n# If there's only one word in type, set type2 to NA\nmc3_data5$nodes$type2 &lt;- ifelse(grepl(\"\\\\.\", mc3_data5$nodes$type), mc3_data5$nodes$type2, NA)\n\n# Remove the original 'type' column\nmc3_data5$nodes &lt;- mc3_data5$nodes %&gt;%\n  select(-type)\n\nThe steps below will be used to split text in type column of links into two columns: namely type1 and type2.\n\n# Make a copy of mc3_data4\nmc3_data6 &lt;- mc3_data5\n\n# Split the type column into two columns\n# There are no special cases, exception left blank\nmc3_data6$links &lt;- mc3_data6$links %&gt;%\n  mutate(\n    type1 = sub(\"(.*?\\\\..*?)(\\\\.[^.]+)?$\", \"\\\\1\", type),\n    type2 = ifelse(grepl(\"\\\\.\", type), sub(\".*\\\\.\", \"\", type), \"\")\n  )\n\n# remove the original 'type' column\nmc3_data6$links &lt;- mc3_data6$links %&gt;%\n  select(-type)\n\nVerify changes\n\n# View the first few rows of the type columns in nodes\nhead(mc3_data6$nodes %&gt;% select(type1,type2))\n\n                        type1   type2\n1 Entity.Organization.Company Company\n2 Entity.Organization.Company Company\n3 Entity.Organization.Company Company\n4 Entity.Organization.Company Company\n5 Entity.Organization.Company Company\n6 Entity.Organization.Company Company\n\n# View the first few rows of the type columns in links\nhead(mc3_data6$links %&gt;% select(type1,type2))\n\n       type1           type2\n1 Event.Owns Shareholdership\n2 Event.Owns Shareholdership\n3 Event.Owns Shareholdership\n4 Event.Owns Shareholdership\n5 Event.Owns Shareholdership\n6 Event.Owns Shareholdership\n\n\n\nview(mc3_data6[[\"nodes\"]])\nview(mc3_data6[[\"links\"]])"
  },
  {
    "objectID": "Task/combined.html#extract-nodes",
    "href": "Task/combined.html#extract-nodes",
    "title": "Main solution",
    "section": "",
    "text": "For Question 1\n\n#keep only necessary columns\nmc3_nodes_1 &lt;- as_tibble(mc3_data6$nodes) %&gt;%\n  select (-TradeDescription,\n          -last_edited_by,\n          -last_edited_date,\n          -algorithm,\n          -dob,\n          -type1)\n\nSave as rds file for future use\n\nwrite_rds(mc3_nodes_1, \"data/rds/mc3_nodes_1.rds\")"
  },
  {
    "objectID": "Task/combined.html#extract-links",
    "href": "Task/combined.html#extract-links",
    "title": "Main solution",
    "section": "",
    "text": "For Question 1\n\nmc3_links_1 &lt;- as_tibble(mc3_data6$links) %&gt;%\n  select (-last_edited_by,\n          -last_edited_date,\n          -date_added,\n          -key,\n          -algorithm,\n          -type1,\n          -end_date)\n\nSave as rds file for future use\n\nwrite_rds(mc3_links_1, \"data/rds/mc3_links_1.rds\")"
  },
  {
    "objectID": "Task/combined.html#number-of-transactions-over-time",
    "href": "Task/combined.html#number-of-transactions-over-time",
    "title": "Main solution",
    "section": "Number of Transactions over Time",
    "text": "Number of Transactions over Time\nNumber of links can be used to determine transactions over time\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(transactions_over_time, aes(x = start_date, y = count)) +\n  geom_line() +\n  labs(title = \"Transactions Over Time\", x = \"Date\", y = \"Number of Transactions\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe dataset spans from year 1952 to 2035.\nWe can see that from the start of the dataset until about year 2000, there were relatively few transactions. There was a small spike after year 2000, proceeded by exponential growth around 2005. However, there was a dip in transactions in 2035.\nThe dip could be due to effects after SouthSeafood Express Corp was caught for illegal behaviour and eventually closed in 2035.\nAnalysis should focus on transactions from year 2005 onwards. Data analysed should also be aggregated by year.\n\n\n\nFilter data\nFilter data to only keep transactions from 2000 (5 years before 2005) to 2035 (end of dataset). We keep some data that occurs before the start of our period of interest to capture any recent changes to entities.\n\n# Filter the data frames to keep only data from the year 2000 and onwards\nmc3_links_1_filtered &lt;- mc3_links_1 %&gt;%\n  filter(start_date &gt;= as.Date(\"2000-01-01\"))\n\n\n\nAggregate Data by Year\n\n# Extract year for aggregation\nmc3_links_1_filtered2 &lt;- mc3_links_1_filtered %&gt;%\n  mutate(transaction_year = year(start_date))\n\n# Calculate the number of transactions per year\nyearly_txns &lt;- mc3_links_1_filtered2 %&gt;%\n  group_by(transaction_year) %&gt;%\n  summarise(num_transactions = n())\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Plot the number of transactions per year\nggplot(yearly_txns, aes(x = transaction_year, y = num_transactions)) +\n  geom_line(color = \"blue\") +\n  labs(title = \"Number of Transactions Per Year\",\n       x = \"Year\",\n       y = \"Number of Transactions\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIt is now clearer that the rapid growth in transactions started around 2005, before reaching its peak at 2034 and sharply dropping in 2035, likely due to after effects of the SouthSeafood Express Corp incident."
  },
  {
    "objectID": "Task/combined.html#number-of-active-companies-per-year",
    "href": "Task/combined.html#number-of-active-companies-per-year",
    "title": "Main solution",
    "section": "Number of Active Companies Per Year",
    "text": "Number of Active Companies Per Year\nDrop na values\n\nmc3_nodes2_1 &lt;- mc3_nodes_1 %&gt;%\n  drop_na(founding_date) # removes Persons and Persons CEO\n\nNumber of nodes can be used to determine the number of active companies per year.\n\n# Extract year for aggregation\nmc3_nodes3_1 &lt;- mc3_nodes2_1 %&gt;%\n  mutate(active_year = floor_date(founding_date, \"year\"))\n\n# Calculate the number of active companies per year\nactive_companies &lt;- mc3_nodes3_1 %&gt;%\n  group_by(active_year) %&gt;%\n  summarise(num_active_companies = n())\n\nSummary\n\n# Calculate the summary statistics\nsummary_stats &lt;- summary(active_companies$num_active_companies)\nsummary_stats\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  79.00   88.50   96.00   97.48  104.00  136.00 \n\n# Extract and save the mean\n# Round to 2 decimal places\nmean_active_companies &lt;- round(summary_stats[\"Mean\"], 2)\n\nPlot graph\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Plot the number of active companies over time\nggplot(active_companies, aes(x = active_year, y = num_active_companies)) +\n  # line plot\n  geom_line(color = \"darkgreen\") +\n  labs(title = \"Number of Active Companies Over Time\",\n       x = \"Date\",\n       y = \"Number of Active Companies\") +\n  # mean line\n  geom_hline(aes(yintercept = mean_active_companies), \n             linetype = \"dotted\", color = \"blue\") +\n  annotate(\"text\", x = min(active_companies$active_year), \n           y = mean_active_companies, \n           label = paste(\"Mean:\", mean_active_companies), \n           hjust = 0, vjust = -1, color = \"blue\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWhile there are fluctuations in the number of active companies over time, there is generally an increasing trend of the number of active companies over time, especially around 2010 onwards. This period shows a rising trend with the number of active companies reaching the highest values in the dataset. This is similar to that observed in the number of transactions over time, seen above.\nWe also see a dip around 2035, before the numbers increase again. Also likely due to the after effects of the SouthSeafood Express Corp incident."
  },
  {
    "objectID": "Task/combined.html#centrality-measures",
    "href": "Task/combined.html#centrality-measures",
    "title": "Main solution",
    "section": "Centrality Measures",
    "text": "Centrality Measures\n\nModifying network nodes and edges\nPrepare the edges dataframe for network analysis by:\n\nEnsuring all edges are unique.\nConverting columns to a uniform type.\nCalculating the weight of each edge (how many times each connection occurs).\nRemoving any self-loops.\n\n\nmc3_edges &lt;-\n  as_tibble(mc3_links_1_filtered2) %&gt;%\n  distinct() %&gt;%\n  mutate(source = as.character(source),\n         target = as.character(target),\n         type = as.character(type2),\n         tyear = as.integer(transaction_year)) %&gt;%\n  group_by(source, target, type,tyear) %&gt;%\n  summarise(weights = n()) %&gt;%\n  filter(source != target) %&gt;%\n  ungroup()\n\n`summarise()` has grouped output by 'source', 'target', 'type'. You can\noverride using the `.groups` argument.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe resulting mc3_edges tibble contains the columns source, target, type, year, and weights, where each row represents a unique edge between two nodes with a specific type, and the weights column represents the number of times that edge occurs.\n\n\nClean and preprocess the nodes data by:\n\nEnsuring that each column has the correct data type for analysis.\nSelecting only the necessary columns for further analysis or visualization.\n\n\nmc3_nodes &lt;- as_tibble(mc3_nodes_1) %&gt;%\n  mutate(country = as.character(country), \n         id = as.character(id), \n         ProductServices = as.character(ProductServices), \n         revenue = as.numeric(as.character(revenue)), \n         type = as.character(type2)) %&gt;%\n  select(id, country, type, revenue, ProductServices)\n\n\n\n\n\n\n\nNote\n\n\n\nThe resulting mc3_nodes tibble contains the cleaned and correctly typed columns id, country, type, revenue, and ProductServices.\n\n\n\n\nKeeping unique values\nEdges\n\nunique_transaction_types_edges &lt;- mc3_edges %&gt;%\n  select(type) %&gt;%\n  distinct()\n\n# Display the unique transaction types\nprint(unique_transaction_types_edges)\n\n# A tibble: 4 × 1\n  type               \n  &lt;chr&gt;              \n1 Shareholdership    \n2 BeneficialOwnership\n3 WorksFor           \n4 FamilyRelationship \n\n\n\n\n\n\n\n\nNote\n\n\n\nThere are 4 types of edges, namely:\n\nShareholdership\nWorksFor\nBeneficialOwnership\nFamilyRelationship\n\n\n\nNodes\n\nunique_transaction_types_nodes &lt;- mc3_nodes %&gt;%\n  select(type) %&gt;%\n  distinct()\n\n# Display the unique transaction types\nprint(unique_transaction_types_nodes)\n\n# A tibble: 8 × 1\n  type            \n  &lt;chr&gt;           \n1 Company         \n2 LogisticsCompany\n3 FishingCompany  \n4 FinancialCompany\n5 NewsCompany     \n6 NGO             \n7 Person          \n8 CEO             \n\n\n\n\n\n\n\n\nNote\n\n\n\nThere are 8 types of nodes, namely:\n\nCompany\nLogisticsCompany\nFishingCompany\nFinancialCompany\nNewsCompany\nNGO\nPerson\nCEO\n\n\n\n\n\nExtract all the source and target nodes\nExtract all the source and target nodes, then, drop any unmatched nodes\n\nid1 &lt;- mc3_edges %&gt;%\n  select(source) %&gt;%\n  rename(id = source)\n\nid2 &lt;- mc3_edges %&gt;%\n  select(target) %&gt;%\n  rename(id = target)\n\nmc3_nodes1 &lt;- rbind(id1, id2) %&gt;%\n  distinct() %&gt;%\n  left_join(mc3_nodes, by = c(\"id\" = \"id\")) %&gt;%\n  mutate(unmatched = \"drop\")\n\nVerify results\n\nprint(mc3_nodes1)\n\n# A tibble: 60,489 × 6\n   id                     country     type     revenue ProductServices unmatched\n   &lt;chr&gt;                  &lt;chr&gt;       &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;    \n 1 4. SeaCargo Ges.m.b.H. Oceanus     Logisti…  23304. Tuna, sword fi… drop     \n 2 9. RiverLine CJSC      Oceanus     Company   50134. Unknown         drop     \n 3 Aaron Acosta           Mawalara    Person        0  &lt;NA&gt;            drop     \n 4 Aaron Allen            Galduzim    Person        0  &lt;NA&gt;            drop     \n 5 Aaron Austin           Kethilim    Person        0  &lt;NA&gt;            drop     \n 6 Aaron Baker            Azurionix   Person        0  &lt;NA&gt;            drop     \n 7 Aaron Barry            Kondanovia  Person        0  &lt;NA&gt;            drop     \n 8 Aaron Bauer            Rio Solovia Person        0  &lt;NA&gt;            drop     \n 9 Aaron Bishop           Osterivaro  Person        0  &lt;NA&gt;            drop     \n10 Aaron Bolton           n.a.        Person        0  &lt;NA&gt;            drop     \n# ℹ 60,479 more rows\n\n\n\n\nCreate Graph Object\nCreate graph object and calculate centrality measures\n\nmc3_graph &lt;- tbl_graph(nodes = mc3_nodes1, edges = mc3_edges, directed = TRUE) %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n  theme_graph()\n## List of 136\n##  $ line                            :List of 6\n##   ..$ colour       : chr \"black\"\n##   ..$ linewidth    : num 0.5\n##   ..$ linetype     : num 1\n##   ..$ lineend      : chr \"butt\"\n##   ..$ arrow        : logi FALSE\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n##  $ rect                            :List of 5\n##   ..$ fill         : chr \"white\"\n##   ..$ colour       : chr \"black\"\n##   ..$ linewidth    : num 0.5\n##   ..$ linetype     : num 1\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n##  $ text                            :List of 11\n##   ..$ family       : chr \"Arial Narrow\"\n##   ..$ face         : chr \"plain\"\n##   ..$ colour       : chr \"black\"\n##   ..$ size         : num 11\n##   ..$ hjust        : num 0.5\n##   ..$ vjust        : num 0.5\n##   ..$ angle        : num 0\n##   ..$ lineheight   : num 0.9\n##   ..$ margin       : 'margin' num [1:4] 0points 0points 0points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : logi FALSE\n##   ..$ inherit.blank: logi FALSE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ title                           : NULL\n##  $ aspect.ratio                    : NULL\n##  $ axis.title                      : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ axis.title.x                    :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : NULL\n##   ..$ vjust        : num 1\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 2.75points 0points 0points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.title.x.top                :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : NULL\n##   ..$ vjust        : num 0\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 0points 2.75points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.title.x.bottom             : NULL\n##  $ axis.title.y                    :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : NULL\n##   ..$ vjust        : num 1\n##   ..$ angle        : num 90\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 2.75points 0points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.title.y.left               : NULL\n##  $ axis.title.y.right              :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : NULL\n##   ..$ vjust        : num 1\n##   ..$ angle        : num -90\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.75points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.text                       : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ axis.text.x                     :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : NULL\n##   ..$ vjust        : num 1\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 2.2points 0points 0points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.text.x.top                 :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : NULL\n##   ..$ vjust        : num 0\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 0points 2.2points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.text.x.bottom              : NULL\n##  $ axis.text.y                     :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : num 1\n##   ..$ vjust        : NULL\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.text.y.left                : NULL\n##  $ axis.text.y.right               :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : num 0\n##   ..$ vjust        : NULL\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.2points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.text.theta                 : NULL\n##  $ axis.text.r                     :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : num 0.5\n##   ..$ vjust        : NULL\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 2.2points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.ticks                      : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ axis.ticks.x                    : NULL\n##  $ axis.ticks.x.top                : NULL\n##  $ axis.ticks.x.bottom             : NULL\n##  $ axis.ticks.y                    : NULL\n##  $ axis.ticks.y.left               : NULL\n##  $ axis.ticks.y.right              : NULL\n##  $ axis.ticks.theta                : NULL\n##  $ axis.ticks.r                    : NULL\n##  $ axis.minor.ticks.x.top          : NULL\n##  $ axis.minor.ticks.x.bottom       : NULL\n##  $ axis.minor.ticks.y.left         : NULL\n##  $ axis.minor.ticks.y.right        : NULL\n##  $ axis.minor.ticks.theta          : NULL\n##  $ axis.minor.ticks.r              : NULL\n##  $ axis.ticks.length               : 'simpleUnit' num 2.75points\n##   ..- attr(*, \"unit\")= int 8\n##  $ axis.ticks.length.x             : NULL\n##  $ axis.ticks.length.x.top         : NULL\n##  $ axis.ticks.length.x.bottom      : NULL\n##  $ axis.ticks.length.y             : NULL\n##  $ axis.ticks.length.y.left        : NULL\n##  $ axis.ticks.length.y.right       : NULL\n##  $ axis.ticks.length.theta         : NULL\n##  $ axis.ticks.length.r             : NULL\n##  $ axis.minor.ticks.length         : 'rel' num 0.75\n##  $ axis.minor.ticks.length.x       : NULL\n##  $ axis.minor.ticks.length.x.top   : NULL\n##  $ axis.minor.ticks.length.x.bottom: NULL\n##  $ axis.minor.ticks.length.y       : NULL\n##  $ axis.minor.ticks.length.y.left  : NULL\n##  $ axis.minor.ticks.length.y.right : NULL\n##  $ axis.minor.ticks.length.theta   : NULL\n##  $ axis.minor.ticks.length.r       : NULL\n##  $ axis.line                       : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ axis.line.x                     : NULL\n##  $ axis.line.x.top                 : NULL\n##  $ axis.line.x.bottom              : NULL\n##  $ axis.line.y                     : NULL\n##  $ axis.line.y.left                : NULL\n##  $ axis.line.y.right               : NULL\n##  $ axis.line.theta                 : NULL\n##  $ axis.line.r                     : NULL\n##  $ legend.background               : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ legend.margin                   : 'margin' num [1:4] 5.5points 5.5points 5.5points 5.5points\n##   ..- attr(*, \"unit\")= int 8\n##  $ legend.spacing                  : 'simpleUnit' num 11points\n##   ..- attr(*, \"unit\")= int 8\n##  $ legend.spacing.x                : NULL\n##  $ legend.spacing.y                : NULL\n##  $ legend.key                      : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ legend.key.size                 : 'simpleUnit' num 1.2lines\n##   ..- attr(*, \"unit\")= int 3\n##  $ legend.key.height               : NULL\n##  $ legend.key.width                : NULL\n##  $ legend.key.spacing              : 'simpleUnit' num 5.5points\n##   ..- attr(*, \"unit\")= int 8\n##  $ legend.key.spacing.x            : NULL\n##  $ legend.key.spacing.y            : NULL\n##  $ legend.frame                    : NULL\n##  $ legend.ticks                    : NULL\n##  $ legend.ticks.length             : 'rel' num 0.2\n##  $ legend.axis.line                : NULL\n##  $ legend.text                     :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : 'rel' num 0.8\n##   ..$ hjust        : NULL\n##   ..$ vjust        : NULL\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : NULL\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ legend.text.position            : NULL\n##  $ legend.title                    :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : num 0\n##   ..$ vjust        : NULL\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : NULL\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ legend.title.position           : NULL\n##  $ legend.position                 : chr \"right\"\n##  $ legend.position.inside          : NULL\n##  $ legend.direction                : NULL\n##  $ legend.byrow                    : NULL\n##  $ legend.justification            : chr \"center\"\n##  $ legend.justification.top        : NULL\n##  $ legend.justification.bottom     : NULL\n##  $ legend.justification.left       : NULL\n##  $ legend.justification.right      : NULL\n##  $ legend.justification.inside     : NULL\n##  $ legend.location                 : NULL\n##  $ legend.box                      : NULL\n##  $ legend.box.just                 : NULL\n##  $ legend.box.margin               : 'margin' num [1:4] 0cm 0cm 0cm 0cm\n##   ..- attr(*, \"unit\")= int 1\n##  $ legend.box.background           : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ legend.box.spacing              : 'simpleUnit' num 11points\n##   ..- attr(*, \"unit\")= int 8\n##   [list output truncated]\n##  - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n##  - attr(*, \"complete\")= logi TRUE\n##  - attr(*, \"validate\")= logi TRUE\n\n\n\nNetwork Graph\n\nPlotCode\n\n\n\n\nWarning: The `trans` argument of `continuous_scale()` is deprecated as of ggplot2 3.5.0.\nℹ Please use the `transform` argument instead.\n\n\n\n\n\n\n\n\n\n\n\n\n# Display the network graph\nggraph(mc3_graph, layout = \"fr\") + # Using Fruchterman-Reingold layout\n  geom_edge_link(aes(edge_alpha = 0.8, edge_width = 0.8)) + # Customize edge appearance\n  geom_node_point(aes(size = betweenness_centrality, color = closeness_centrality)) + # Customize node appearance\n  scale_color_viridis_c() + # Use viridis color scale\n  theme_void() + # Use a void theme\n  labs(title = \"Refined Network Graph of Atypical Business Transactions\",\n       subtitle = \"Nodes colored by closeness centrality and sized by betweenness centrality\",\n       caption = \"Data Source: mc3.json\") # Add titles and captions\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe grey circular portion in the center of the network graph does not represent any specific data or entities. It is a visual byproduct resulting from the dense clustering of nodes and edges in that central region. This effect is particularly noticeable in dense, highly interconnected network visualizations where nodes and edges are concentrated in a small space.\nThus, we filter the nodes to refine the graph.\n\n\n\n\nRefined Network Graph\n\nTop Nodes\nIdentify top 20 nodes by betweenness centrality\n\n# Identify top nodes by betweenness centrality\ntop_nodes &lt;- mc3_graph %&gt;% \n  as_tibble()\n\n# Identify top 20 nodes by betweenness centrality\ntop_nodes2 &lt;- top_nodes %&gt;% \n  top_n(20, wt = betweenness_centrality)\n\n\n\nList of most active people and businesses\n\ntop_nodes2\n\n# A tibble: 21 × 8\n   id     country type  revenue ProductServices unmatched betweenness_centrality\n   &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;                      &lt;dbl&gt;\n 1 Corte… Mawala… Comp…  6.99e3 Finish carpent… drop                          22\n 2 Evans… Oceanus Fish…  5.50e4 Processing and… drop                          29\n 3 Fried… Mawand… Comp…  1.64e4 Grocery produc… drop                          38\n 4 Gvard… Nalaki… Comp…  6.85e4 Shipping servi… drop                          33\n 5 Hill … Oceanus Comp…  4.75e3 Unknown         drop                          31\n 6 Howel… Mawand… Comp…  7.74e6 High-grade met… drop                          54\n 7 Johns… Valtal… Comp…  3.35e4 Machinery and … drop                          33\n 8 Kaise… Isla S… Comp…  2.32e4 Canned and cur… drop                          26\n 9 King … Oceanus Comp…  0      Operation of i… drop                          29\n10 Lane … Imazam  Fish…  4.80e3 Fish and seafo… drop                          33\n# ℹ 11 more rows\n# ℹ 1 more variable: closeness_centrality &lt;dbl&gt;\n\n\n\n\n\n\n\n\nNote\n\n\n\nIt is likely that these entities on the top 10 list are big players in the industry and control information and resources.\nHigh betweenness centrality means that a node plays a more crucial role in connecting other nodes. It can be an indicator of:\n\nBrokerage Role: Nodes with high betweenness centrality often act as bridges or intermediaries between different parts of the network. They control the flow of information, resources, or interactions between other nodes.\nControl and Influence: Nodes with high betweenness centrality have the potential to control the flow of information or resources in the network. They may have more influence or power over the network dynamics compared to other nodes.\n\n\n\nPlot refined graph\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Extract IDs of top nodes\n# Extract IDs of top nodes\ntop_node_ids &lt;- top_nodes$id\n\n# Filter the graph to include only top nodes and their incident edges\ntop_graph &lt;- mc3_graph %&gt;%\n  activate(nodes) %&gt;%\n  filter(id %in% top_node_ids) %&gt;%\n  activate(edges) %&gt;%\n  filter(edge_is_incident(top_node_ids))\n\n# Plot the network graph with top nodes\nggraph(top_graph, layout = \"fr\") + \n  geom_edge_link(aes(edge_alpha = 0.1, edge_width = 0.1)) +\n  geom_node_point(aes(size = betweenness_centrality, color = closeness_centrality)) +\n  scale_color_viridis_c() +\n  theme_void() +\n  labs(title = \"Top 20 Nodes Network Graph\",\n       subtitle = \"Nodes colored by closeness centrality and sized by betweenness centrality\",\n       caption = \"Data Source: mc3.json\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that for the top nodes, they are highly interconnected. To the extent that the graph becomes less interpretable."
  },
  {
    "objectID": "Task/combined.html#key-influencers",
    "href": "Task/combined.html#key-influencers",
    "title": "Main solution",
    "section": "Key Influencers",
    "text": "Key Influencers\n\nExtract key influencers and their edges\n\n# Filter mc3_edges to keep rows where source ID is in top_nodes2\nkeypersonnel &lt;- mc3_edges %&gt;%\n  filter(source %in% top_nodes2$id)\n\n\n\nKey influencers of the industry\n\nunique(keypersonnel$source)\n\n [1] \"Cortez LLC\"                       \"Evans-Pearson\"                   \n [3] \"Friedman, Gibson and Garcia\"      \"GvardeyskAmerica Shipping Plc\"   \n [5] \"Hill PLC\"                         \"Howell LLC\"                      \n [7] \"Johnson, Perez and Salinas\"       \"Kaiser, Warren and Shepard\"      \n [9] \"King and Sons\"                    \"Lane Group\"                      \n[11] \"Lee-Ramirez\"                      \"Mcpherson-Wright\"                \n[13] \"NamRiver Transit A/S\"             \"Osborne, Saunders and Brown\"     \n[15] \"Patel-Miller\"                     \"Ramos, Jordan and Stewart\"       \n[17] \"Rivera, Lee and Carroll\"          \"Russell and Sons\"                \n[19] \"Stein, Taylor and Williams\"       \"StichtingMarine Shipping Company\"\n[21] \"Vasquez-Gonzalez\"                \n\n\n\n\n\n\n\n\nNote\n\n\n\nThe key influencers are:\n\nCortez LLC\nEvans-Pearson\nFriedman, Gibson and Garcia\nGvardeyskAmerica Shipping Plc\nHill PLC\nHowell LLC\nJohnson, Perez and Salinas\nKaiser, Warren and Shepard\nKing and Sons\nLane Group\nLee-Ramirez\nMcpherson-Wright\nNamRiver Transit A/S\nOsborne, Saunders and Brown\nPatel-Miller\nRamos, Jordan and Stewart\nRivera, Lee and Carroll Russell and Sons\nStein, Taylor and Williams\nStichtingMarine Shipping Company\nVasquez-Gonzalez\n\n\n\nRelationship between influencers and their links\n\nunique(keypersonnel$type)\n\n[1] \"Shareholdership\"\n\n\n\n\n\n\n\n\nNote\n\n\n\nThere is only 1 type of relationship between the influencers and their links. The influencers are shareholders of those they are linked to.\n\n\n\n\nNetwork Graph\nCreate Graph Object\n\n# Create a nodes dataframe from the unique source and target values\nnodes &lt;- unique(c(keypersonnel$source, keypersonnel$target)) %&gt;%\n  data.frame(name = .)\n\n# Create the graph object using tbl_graph\ngraph_data &lt;- tbl_graph(nodes = nodes,\n                        edges = keypersonnel %&gt;%\n                          rename(from = source, to = target),\n                        directed = TRUE)\n\nPlot Graph\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Plot the directed graph\nggraph(graph_data, layout = \"fr\") +  # Using Fruchterman-Reingold layout\n  geom_edge_link(aes(label = as.character(tyear)),  # Only label with tyear\n                 arrow = arrow(length = unit(4, 'mm')),  # Add arrows to indicate direction\n                 end_cap = circle(3, 'mm'),  # Cap the end of the edges with a circle\n                 label_dodge = unit(2, \"mm\"),  # Adjust label position to avoid overlap\n                 label_size = 3,  # Set label size\n                 edge_width = 0.8,  # Set edge width\n                 edge_alpha = 0.8) +  # Set edge transparency\n  geom_node_point(size = 5, color = \"blue\") +  # Customize node appearance\n  geom_node_text(aes(label = name), vjust = 1.5, size = 4) +  # Add node labels\n  theme_void() +  # Use a void theme\n  labs(title = \"Directed Network Graph of Key Personnel Transactions\",\n       subtitle = \"Nodes represent unique sources and targets, edges labeled with year\",\n       caption = \"Data Source: keypersonnel\")  # Add titles and captions\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nMost number of links:\n\n\n\nEntity Name\nNumber of Links\n\n\n\n\nGvardeyskAmerica Shipping Plc\n4\n\n\nRivera, Lee and Carroll\n3\n\n\nCortez LLC\n2\n\n\nKaiser, Warren and Shepard\n2\n\n\nMcpherson-Wright\n2\n\n\nPatel-Miller\n2\n\n\nStichtingMarine Shipping Company\n2\n\n\nVasquez-Gonzalez\n2\n\n\n\nThe earliest link: Lane Group has been the shareholder of Howell LLC since 2020.\nThe most recent link: GvardeyskAmerica Shipping Plc is the shareholder of ArawakFish Cargo Ges.m.b.H.. since 2034."
  },
  {
    "objectID": "Task/combined.html#finding-atypical-business-relationships",
    "href": "Task/combined.html#finding-atypical-business-relationships",
    "title": "Main solution",
    "section": "Finding atypical Business Relationships",
    "text": "Finding atypical Business Relationships\n\n# Creating the graph object\nmc3_graph1 &lt;- tbl_graph(nodes = mc3_nodes1, edges = mc3_edges, directed = FALSE) %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n  theme_graph()\n\nList of 136\n $ line                            :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : num 1\n  ..$ lineend      : chr \"butt\"\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                            :List of 5\n  ..$ fill         : chr \"white\"\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                            :List of 11\n  ..$ family       : chr \"Arial Narrow\"\n  ..$ face         : chr \"plain\"\n  ..$ colour       : chr \"black\"\n  ..$ size         : num 11\n  ..$ hjust        : num 0.5\n  ..$ vjust        : num 0.5\n  ..$ angle        : num 0\n  ..$ lineheight   : num 0.9\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : logi FALSE\n  ..$ inherit.blank: logi FALSE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ title                           : NULL\n $ aspect.ratio                    : NULL\n $ axis.title                      : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.title.x                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 2.75points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.top                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 2.75points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.bottom             : NULL\n $ axis.title.y                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.75points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y.left               : NULL\n $ axis.title.y.right              :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.75points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text                       : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.text.x                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 2.2points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top                 :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 2.2points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.bottom              : NULL\n $ axis.text.y                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 1\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y.left                : NULL\n $ axis.text.y.right               :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.2points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.theta                 : NULL\n $ axis.text.r                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0.5\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 2.2points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks                      : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.x                    : NULL\n $ axis.ticks.x.top                : NULL\n $ axis.ticks.x.bottom             : NULL\n $ axis.ticks.y                    : NULL\n $ axis.ticks.y.left               : NULL\n $ axis.ticks.y.right              : NULL\n $ axis.ticks.theta                : NULL\n $ axis.ticks.r                    : NULL\n $ axis.minor.ticks.x.top          : NULL\n $ axis.minor.ticks.x.bottom       : NULL\n $ axis.minor.ticks.y.left         : NULL\n $ axis.minor.ticks.y.right        : NULL\n $ axis.minor.ticks.theta          : NULL\n $ axis.minor.ticks.r              : NULL\n $ axis.ticks.length               : 'simpleUnit' num 2.75points\n  ..- attr(*, \"unit\")= int 8\n $ axis.ticks.length.x             : NULL\n $ axis.ticks.length.x.top         : NULL\n $ axis.ticks.length.x.bottom      : NULL\n $ axis.ticks.length.y             : NULL\n $ axis.ticks.length.y.left        : NULL\n $ axis.ticks.length.y.right       : NULL\n $ axis.ticks.length.theta         : NULL\n $ axis.ticks.length.r             : NULL\n $ axis.minor.ticks.length         : 'rel' num 0.75\n $ axis.minor.ticks.length.x       : NULL\n $ axis.minor.ticks.length.x.top   : NULL\n $ axis.minor.ticks.length.x.bottom: NULL\n $ axis.minor.ticks.length.y       : NULL\n $ axis.minor.ticks.length.y.left  : NULL\n $ axis.minor.ticks.length.y.right : NULL\n $ axis.minor.ticks.length.theta   : NULL\n $ axis.minor.ticks.length.r       : NULL\n $ axis.line                       : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.line.x                     : NULL\n $ axis.line.x.top                 : NULL\n $ axis.line.x.bottom              : NULL\n $ axis.line.y                     : NULL\n $ axis.line.y.left                : NULL\n $ axis.line.y.right               : NULL\n $ axis.line.theta                 : NULL\n $ axis.line.r                     : NULL\n $ legend.background               : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.margin                   : 'margin' num [1:4] 5.5points 5.5points 5.5points 5.5points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing                  : 'simpleUnit' num 11points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing.x                : NULL\n $ legend.spacing.y                : NULL\n $ legend.key                      : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.key.size                 : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height               : NULL\n $ legend.key.width                : NULL\n $ legend.key.spacing              : 'simpleUnit' num 5.5points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key.spacing.x            : NULL\n $ legend.key.spacing.y            : NULL\n $ legend.frame                    : NULL\n $ legend.ticks                    : NULL\n $ legend.ticks.length             : 'rel' num 0.2\n $ legend.axis.line                : NULL\n $ legend.text                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 0.8\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.position            : NULL\n $ legend.title                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.position           : NULL\n $ legend.position                 : chr \"right\"\n $ legend.position.inside          : NULL\n $ legend.direction                : NULL\n $ legend.byrow                    : NULL\n $ legend.justification            : chr \"center\"\n $ legend.justification.top        : NULL\n $ legend.justification.bottom     : NULL\n $ legend.justification.left       : NULL\n $ legend.justification.right      : NULL\n $ legend.justification.inside     : NULL\n $ legend.location                 : NULL\n $ legend.box                      : NULL\n $ legend.box.just                 : NULL\n $ legend.box.margin               : 'margin' num [1:4] 0cm 0cm 0cm 0cm\n  ..- attr(*, \"unit\")= int 1\n $ legend.box.background           : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.box.spacing              : 'simpleUnit' num 11points\n  ..- attr(*, \"unit\")= int 8\n  [list output truncated]\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n\n\n# Identify top nodes by betweenness centrality\ntop_nodes &lt;- mc3_graph1 %&gt;% \n  as_tibble() %&gt;% \n  filter(betweenness_centrality &gt;= 3000000)\n\n\nhead(top_nodes, n = 50)\n\n# A tibble: 50 × 8\n   id     country type  revenue ProductServices unmatched betweenness_centrality\n   &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;                      &lt;dbl&gt;\n 1 Aaron… n.a.    Pers…       0 &lt;NA&gt;            drop                    7756175.\n 2 Alan … n.a.    Pers…       0 &lt;NA&gt;            drop                    7756175.\n 3 Aleja… Valtal… Pers…       0 &lt;NA&gt;            drop                    7231016.\n 4 Alex … Arvaros Pers…       0 &lt;NA&gt;            drop                    3442208 \n 5 Alexa… n.a.    Pers…       0 &lt;NA&gt;            drop                    7756175.\n 6 Amand… Mawala… Pers…       0 &lt;NA&gt;            drop                    7944565.\n 7 Amede… Novarc… Pers…       0 &lt;NA&gt;            drop                    4211301.\n 8 Amy A… Ariuzi… CEO         0 &lt;NA&gt;            drop                    3272037.\n 9 Amy B… Kondan… Pers…       0 &lt;NA&gt;            drop                    4044917.\n10 Andre… Kondan… Pers…       0 &lt;NA&gt;            drop                    3914655.\n# ℹ 40 more rows\n# ℹ 1 more variable: closeness_centrality &lt;dbl&gt;\n\n\n\n# Filter edges for atypical business transactions\natypical_edges &lt;- mc3_edges %&gt;%\n  filter(type %in% c(\"Shareholdership\", \"WorksFor\", \"BeneficialOwnership\", \"FamilyRelationship\"))\n\n# Extract nodes that are part of these transactions\natypical_nodes &lt;- mc3_nodes %&gt;%\n  filter(id %in% unique(c(atypical_edges$source, atypical_edges$target)))\n\n# Create the graph object with filtered data\natypical_graph &lt;- tbl_graph(nodes = atypical_nodes, edges = atypical_edges, directed = FALSE) %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n\n# Define higher centrality thresholds for more filtering\nbetweenness_threshold &lt;- quantile(atypical_graph %&gt;% activate(nodes) %&gt;% pull(betweenness_centrality), 0.995)\ncloseness_threshold &lt;- quantile(atypical_graph %&gt;% activate(nodes) %&gt;% pull(closeness_centrality), 0.995)\n\n# Filter nodes based on higher centrality thresholds\nfiltered_graph &lt;- atypical_graph %&gt;%\n  activate(nodes) %&gt;%\n  filter(betweenness_centrality &gt;= betweenness_threshold | closeness_centrality &gt;= closeness_threshold) %&gt;%\n  activate(edges) %&gt;%\n  filter(edge_is_between())\n\n# Display the refined network graph\nggraph(filtered_graph, layout = \"fr\") + # Using Fruchterman-Reingold layout\n  geom_edge_link(aes(edge_alpha = 0.8, edge_width = 0.8)) + # Customize edge appearance\n  geom_node_point(aes(size = betweenness_centrality, color = closeness_centrality)) + # Customize node appearance\n  scale_color_viridis_c() + # Use viridis color scale\n  theme_void() + # Use a void theme\n  labs(title = \"Refined Network Graph of Atypical Business Transactions\",\n       subtitle = \"Nodes colored by closeness centrality and sized by betweenness centrality\",\n       caption = \"Data Source: mc3.json\") # Add titles and captions\n\n\n\n\n\n\n\n\n\nStep 2 filtering out false positives with a centrality threshold\n\n# Define higher centrality thresholds for more filtering\nbetweenness_threshold &lt;- quantile(atypical_graph %&gt;% activate(nodes) %&gt;% pull(betweenness_centrality), 0.995)\ncloseness_threshold &lt;- quantile(atypical_graph %&gt;% activate(nodes) %&gt;% pull(closeness_centrality), 0.995)\n\n# Filter nodes based on higher centrality thresholds\nfiltered_graph &lt;- atypical_graph %&gt;%\n  activate(nodes) %&gt;%\n  filter(betweenness_centrality &gt;= betweenness_threshold | closeness_centrality &gt;= closeness_threshold) %&gt;%\n  activate(edges) %&gt;%\n  filter(edge_is_between())\n\n# Verify the filtered graph object\nprint(filtered_graph)\n\n# A tbl_graph: 2557 nodes and 2117 edges\n#\n# A bipartite multigraph with 1146 components\n#\n# Edge Data: 2,117 × 5 (active)\n    from    to type                tyear weights\n   &lt;int&gt; &lt;int&gt; &lt;chr&gt;               &lt;int&gt;   &lt;int&gt;\n 1     3  1199 BeneficialOwnership  2019       1\n 2    25  1199 BeneficialOwnership  2021       1\n 3    29  1199 BeneficialOwnership  2019       1\n 4   148  1199 BeneficialOwnership  2008       1\n 5   150  1199 BeneficialOwnership  2029       1\n 6   175  1199 BeneficialOwnership  2012       1\n 7   229  1199 BeneficialOwnership  2031       1\n 8   316  1199 BeneficialOwnership  2034       1\n 9   448  1199 BeneficialOwnership  2021       1\n10   479  1199 BeneficialOwnership  2019       1\n# ℹ 2,107 more rows\n#\n# Node Data: 2,557 × 7\n  id                country type  revenue ProductServices betweenness_centrality\n  &lt;chr&gt;             &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;                            &lt;dbl&gt;\n1 Abbott-Harrison   Uzifri… Comp…      0  Food products                24317375.\n2 Adams, Hernandez… Rio Is… Comp…      0  Unknown                             0 \n3 Adams-Byrd        Nalako… Comp… 147540. Offers a wide …               4730169.\n# ℹ 2,554 more rows\n# ℹ 1 more variable: closeness_centrality &lt;dbl&gt;\n\n# Display the refined network graph\nggraph(filtered_graph, layout = \"fr\") + # Using Fruchterman-Reingold layout\n  geom_edge_link(aes(edge_alpha = 0.8, edge_width = 0.8)) + # Customize edge appearance\n  geom_node_point(aes(size = betweenness_centrality, color = closeness_centrality)) + # Customize node appearance\n  scale_color_viridis_c() + # Use viridis color scale\n  theme_void() + # Use a void theme\n  labs(title = \"Refined Network Graph of Atypical Business Transactions\",\n       subtitle = \"Nodes colored by closeness centrality and sized by betweenness centrality\",\n       caption = \"Data Source: mc3.json\") # Add titles and captions"
  },
  {
    "objectID": "Task/combined.html#refining-visualisation",
    "href": "Task/combined.html#refining-visualisation",
    "title": "Main solution",
    "section": "Refining visualisation",
    "text": "Refining visualisation\nWe first will need to sift out edges with some form of ownership or working relationship. Following that, the centrality threshold will need to be defined so that most false positives are being filtered out through it and then finally using slice to only take the top 50 edges.\n\nStep 3, take only the top 50 links\n\n# Get top 50 links based on the sum of betweenness centrality of source and target nodes\ntop_50_links &lt;- filtered_graph %&gt;%\n  activate(edges) %&gt;%\n  mutate(edge_betweenness_sum = .N()$betweenness_centrality[from] + .N()$betweenness_centrality[to]) %&gt;%\n  arrange(desc(edge_betweenness_sum)) %&gt;%\n  slice(1:50)\n\n# Create a new graph object with the top 50 links\ntop_50_graph &lt;- tbl_graph(nodes = filtered_graph %&gt;% activate(nodes), edges = top_50_links, directed = FALSE)\n\n# Identify the top nodes for labeling\ntop_nodes &lt;- top_50_graph %&gt;%\n  activate(nodes) %&gt;%\n  as_tibble() %&gt;%\n  arrange(desc(betweenness_centrality)) %&gt;%\n  slice(1:10)\n\n# Extract layout data for node positions\ngraph_layout &lt;- create_layout(top_50_graph, layout = \"fr\")\n\n# Display the refined network graph with top 50 links and node labels\nggraph(graph_layout) + # Using precomputed layout\n  geom_edge_link(aes(edge_alpha = 0.8, edge_width = 0.8), color = \"gray\") + # Customize edge appearance\n  geom_node_point(aes(size = betweenness_centrality, color = closeness_centrality)) + # Customize node appearance\n  geom_node_text(data = graph_layout, aes(x = x, y = y, label = id), repel = TRUE, size = 3, check_overlap = TRUE) + # Add labels to top nodes\n  scale_color_viridis_c() + # Use viridis color scale\n  theme_void() + # Use a void theme\n  labs(title = \"Top 50 Links in Atypical Business Transactions\",\n       subtitle = \"Nodes colored by closeness centrality and sized by betweenness centrality\",\n       caption = \"Data Source: mc3.json\") # Add titles and captions\n\nWarning: ggrepel: 2549 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n# Extract the top 50 links based on the sum of betweenness centrality\ntop_50_links &lt;- filtered_graph %&gt;%\n  activate(edges) %&gt;%\n  mutate(edge_betweenness_sum = .N()$betweenness_centrality[from] + .N()$betweenness_centrality[to]) %&gt;%\n  arrange(desc(edge_betweenness_sum)) %&gt;%\n  slice(1:50) %&gt;%\n  as_tibble()\n\n# Create a data frame with the relevant information\ntop_50_links_df &lt;- top_50_links %&gt;%\n  select(from, to, edge_betweenness_sum)\n\n\n\nInterpretation\n\nNode Size (Betweenness Centrality):\n\nLarger nodes represent entities with higher betweenness centrality. These are nodes that frequently act as intermediaries in the shortest paths between other nodes. They are crucial for the flow of information or transactions in the network.\n\nNode Color (Closeness Centrality):\n\nThe color of the nodes indicates their closeness centrality. Closeness centrality measures how close a node is to all other nodes in the network. Nodes with higher closeness centrality (often lighter colors) can quickly interact with other nodes.\n\nLabeled Nodes:\n\nThe labels represent the most central nodes based on betweenness centrality. These are key entities in the network, acting as significant intermediaries in business transactions.\n\nNode Distribution:\n\nThe dense cluster of nodes in the center indicates a high level of interaction among these entities. Peripheral nodes might indicate entities that are less central but still part of significant transactions.\n\n\n\n\nObservations\n\nHighly Central Entities:\n\nEntities such as “Augustin Le Texier,” “Sullivan and Sons,” “Tullio Jacuzzi,” and others labeled on the graph are highly central in terms of their ability to broker connections between other nodes.\n\nDense Core:\n\nThe central area of the graph is densely packed with nodes, indicating a high degree of interconnection among many entities. This suggests a tightly-knit network where many transactions or interactions occur.\n\nPeripheral Nodes:\n\nNodes on the periphery, though smaller and less central, still play a role in the network. Their interactions may be with the core or other peripheral nodes.\n\n\n\n\nPotential Actions\n\nFocus on Key Players:\n\nEntities with high betweenness and closeness centrality (large, brightly colored nodes) are critical for network connectivity. These entities might be key influencers or major players in business transactions.\n\nInvestigate Clusters:\n\nThe dense central cluster indicates a closely connected group of entities. Investigating these clusters can reveal sub-networks or communities within the larger network.\n\n\n\n\nCluster Investigation\n\n# Perform clustering on the graph\nclustered_graph &lt;- mc3_graph1 %&gt;%\n  mutate(cluster = as.factor(group_louvain()))\n\n# Calculate edge betweenness centrality for the entire graph\nedge_betweenness_vals &lt;- edge_betweenness(clustered_graph)\n\n# Add edge betweenness centrality to the graph\nclustered_graph &lt;- clustered_graph %&gt;%\n  activate(edges) %&gt;%\n  mutate(edge_betweenness = edge_betweenness_vals)\n\n# Highlight key nodes with betweenness centrality &gt;= 3,000,000 and their clusters\nkey_nodes_and_clusters &lt;- clustered_graph %&gt;%\n  activate(nodes) %&gt;%\n  filter(betweenness_centrality &gt;= 3000000) %&gt;%\n  pull(cluster) %&gt;%\n  unique()\n\n# Filter the graph to include only the key nodes and their clusters\nfiltered_graph &lt;- clustered_graph %&gt;%\n  activate(nodes) %&gt;%\n  filter(cluster %in% key_nodes_and_clusters)\n\n# Calculate edge betweenness sum for the filtered graph\nfiltered_graph &lt;- filtered_graph %&gt;%\n  activate(edges) %&gt;%\n  mutate(edge_betweenness_sum = .N()$betweenness_centrality[from] + .N()$betweenness_centrality[to])\n\n# Extract layout data for node positions\ngraph_layout &lt;- create_layout(filtered_graph, layout = \"fr\")\n\n# Enhanced plot with labels, colors, and improved legend\np &lt;- ggraph(graph_layout) +  # Using precomputed layout\n  geom_edge_link(aes(width = edge_betweenness_sum / max(edge_betweenness_sum), \n                     alpha = edge_betweenness_sum / max(edge_betweenness_sum), \n                     tooltip = edge_betweenness_sum), \n                 color = \"gray\") + # Customize edge appearance\n  geom_node_point(aes(size = betweenness_centrality, color = cluster, \n                      alpha = ifelse(betweenness_centrality &gt;= 3000000, 1, 0.4),\n                      tooltip = paste(\"ID:\", id, \"&lt;br&gt;Cluster:\", cluster, \"&lt;br&gt;Betweenness:\", betweenness_centrality))) +  # Add tooltip information\n  geom_node_text(aes(label = ifelse(betweenness_centrality &gt;= 3000000, id, \"\")),\n                 vjust = 1.5, hjust = 1.5, check_overlap = TRUE) +\n  scale_size_continuous(range = c(1, 10)) +\n  scale_color_manual(values = c(\"1\" = \"blue\", \"2\" = \"green\", \"3\" = \"red\", \"4\" = \"yellow\", \"5\" = \"purple\", \"6\" = \"orange\", \"7\" = \"pink\", \"8\" = \"cyan\")) +  # Customize based on the number of clusters\n  guides(edge_alpha = guide_legend(title = \"Edge Alpha\"),\n         size = guide_legend(title = \"Betweenness Centrality\"),\n         color = guide_legend(title = \"Cluster\")) +\n  theme_graph() +\n  theme(legend.position = \"bottom\") +\n  labs(title = \"Enhanced Company Network Visualization\",\n       subtitle = \"Key Nodes Highlighted with Betweenness Centrality &gt;= 3,000,000\")\n\nWarning in geom_edge_link(aes(width =\nedge_betweenness_sum/max(edge_betweenness_sum), : Ignoring unknown aesthetics:\ntooltip\n\n\nWarning in geom_node_point(aes(size = betweenness_centrality, color = cluster,\n: Ignoring unknown aesthetics: tooltip\n\n# Convert ggraph plot to plotly object\np_plotly &lt;- ggplotly(p, tooltip = \"tooltip\")\n\nWarning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomEdgePath() has yet to be implemented in plotly.\n  If you'd like to see this geom implemented,\n  Please open an issue with your example code at\n  https://github.com/ropensci/plotly/issues\n\n# Display the plotly interactive plot\np_plotly"
  }
]