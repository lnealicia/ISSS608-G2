[
  {
    "objectID": "Task/Q1.html",
    "href": "Task/Q1.html",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "",
    "text": "The task is taken from the VAST Challenge 2024. Questions from Mini Case 3: Temporal Analysis will be completed."
  },
  {
    "objectID": "Task/Q1.html#background",
    "href": "Task/Q1.html#background",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Background",
    "text": "Background\nThe business community in Oceanus is dynamic with new startups, mergers, acquisitions, and investments. FishEye International closely watches business records to keep tabs on commercial fishing operators. FishEye’s goal is to identify and prevent illegal fishing in the region’s sensitive marine ecosystem. Analysts are working with company records that show ownership, shareholders, transactions, and information about the typical products and services of each entity. FishEye’s analysts have a hybrid automated/manual process to transform the data into CatchNet: the Oceanus Knowledge Graph.\nIn the past year, Oceanus’s commercial fishing business community was rocked by the news that SouthSeafood Express Corp was caught fishing illegally. FishEye wants to understand temporal patterns and infer what may be happening in Oceanus’s fishing marketplace because of SouthSeafood Express Corp’s illegal behavior and eventual closure. The competitive nature of Oceanus’s fishing market may cause some businesses to react aggressively to capture SouthSeafood Express Corp’s business while other reactions may come from the awareness that illegal fishing does not go undetected and unpunished."
  },
  {
    "objectID": "Task/Q1.html#tasks-and-questions",
    "href": "Task/Q1.html#tasks-and-questions",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Tasks and Questions:",
    "text": "Tasks and Questions:\nA key element in stopping illegal fishing is holding the people who own nefarious companies accountable. Thus, FishEye is keenly interested in developing visualization tools that work with CatchNet to identify the people who hold influence over business networks. That is especially difficult with varied and changing shareholder and ownership relationships.\n\nFishEye analysts want to better visualize changes in corporate structures over time. Create a visual analytics approach that analysts can use to highlight temporal patterns and changes in corporate structures. Examine the most active people and businesses using visual analytics.\n\nNote: the VAST challenge is focused on visual analytics and graphical figures should be included with your response to each question. Please include a reasonable number of figures for each question (no more than about 6) and keep written responses as brief as possible (around 250 words per question). Participants are encouraged to new visual representations rather than relying on traditional or existing approaches."
  },
  {
    "objectID": "Task/Q1.html#installing-and-loading-the-required-libraries",
    "href": "Task/Q1.html#installing-and-loading-the-required-libraries",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\nNote: Ensure that the pacman package has already been installed.\nThe following R packages will be used:\n\ntidytext\ntidyverse\nreadtext\nquanteda\njsonlite\nigraph\ntidygraph\nggraph\nvisNetwork\nclock\ngraphlayouts\nplotly\nggiraph\n\n\npacman::p_load(tidytext, readtext, quanteda, tidyverse, jsonlite, igraph, tidygraph, ggraph, visNetwork, clock, graphlayouts,plotly,ggiraph)"
  },
  {
    "objectID": "Task/Q1.html#importing-json-file",
    "href": "Task/Q1.html#importing-json-file",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Importing JSON File",
    "text": "Importing JSON File\nDirect import of the mc3.json file shows an error message indicating that there’s an invalid character in the JSON text, specifically “NaN”. As “NaN” is not recognised as a valid value, preprocessing of the JSON file to replace “NaN” is required.\nIn the code chunk below, mc3.json is first imported, then all instances of “NaN” are replaced with “null”, and the processed file is written into a json file mc3_fixed.json for later use.\n\n# Read the JSON file as text\njson_text &lt;- readLines(\"data/mc3.json\")\n\n# Replace \"NaN\" with \"null\"\njson_text_fixed &lt;- gsub(\"NaN\", \"null\", json_text)\n\n# Write the fixed JSON text back to a file\nwriteLines(json_text_fixed, \"data/mc3_fixed.json\")\n\nImporting preprocessed mc3_fixed.json file\n\nmc3_data &lt;- fromJSON(\"data/mc3_fixed.json\")\n\nCheck dataframe\n\nOpens new tabs within R workspace, not shown in website\nExample of the view is shown in the screenshot tab below\n\n\nCodeScreenshot Example\n\n\n\nview(mc3_data[[\"nodes\"]])\nview(mc3_data[[\"links\"]])\n\n\n\nmc3_data[[“nodes’]\n\n\nmc3_data[[“links”]]\n\n\n\n\n\nView dataframe\n\nSimilar info as shown above\n\n\nglimpse(mc3_data)\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     : Named list()\n $ nodes     :'data.frame': 60520 obs. of  15 variables:\n  ..$ type             : chr [1:60520] \"Entity.Organization.Company\" \"Entity.Organization.Company\" \"Entity.Organization.Company\" \"Entity.Organization.Company\" ...\n  ..$ country          : chr [1:60520] \"Uziland\" \"Mawalara\" \"Uzifrica\" \"Islavaragon\" ...\n  ..$ ProductServices  : chr [1:60520] \"Unknown\" \"Furniture and home accessories\" \"Food products\" \"Unknown\" ...\n  ..$ PointOfContact   : chr [1:60520] \"Rebecca Lewis\" \"Michael Lopez\" \"Steven Robertson\" \"Anthony Wyatt\" ...\n  ..$ HeadOfOrg        : chr [1:60520] \"Émilie-Susan Benoit\" \"Honoré Lemoine\" \"Jules Labbé\" \"Dr. Víctor Hurtado\" ...\n  ..$ founding_date    : chr [1:60520] \"1954-04-24T00:00:00\" \"2009-06-12T00:00:00\" \"2029-12-15T00:00:00\" \"1972-02-16T00:00:00\" ...\n  ..$ revenue          : num [1:60520] 5995 71767 0 0 4747 ...\n  ..$ TradeDescription : chr [1:60520] \"Unknown\" \"Abbott-Gomez is a leading manufacturer and supplier of high-quality furniture and home accessories, catering to\"| __truncated__ \"Abbott-Harrison is a leading manufacturer of high-quality food products, including baked goods, snacks, and bev\"| __truncated__ \"Unknown\" ...\n  ..$ _last_edited_by  : chr [1:60520] \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" ...\n  ..$ _last_edited_date: chr [1:60520] \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _date_added      : chr [1:60520] \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _raw_source      : chr [1:60520] \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" ...\n  ..$ _algorithm       : chr [1:60520] \"Automatic Import\" \"Automatic Import\" \"Automatic Import\" \"Automatic Import\" ...\n  ..$ id               : chr [1:60520] \"Abbott, Mcbride and Edwards\" \"Abbott-Gomez\" \"Abbott-Harrison\" \"Abbott-Ibarra\" ...\n  ..$ dob              : chr [1:60520] NA NA NA NA ...\n $ links     :'data.frame': 75817 obs. of  11 variables:\n  ..$ start_date       : chr [1:75817] \"2016-10-29T00:00:00\" \"2035-06-03T00:00:00\" \"2028-11-20T00:00:00\" \"2024-09-04T00:00:00\" ...\n  ..$ type             : chr [1:75817] \"Event.Owns.Shareholdership\" \"Event.Owns.Shareholdership\" \"Event.Owns.Shareholdership\" \"Event.Owns.Shareholdership\" ...\n  ..$ _last_edited_by  : chr [1:75817] \"Pelagia Alethea Mordoch\" \"Niklaus Oberon\" \"Pelagia Alethea Mordoch\" \"Pelagia Alethea Mordoch\" ...\n  ..$ _last_edited_date: chr [1:75817] \"2035-01-01T00:00:00\" \"2035-07-15T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _date_added      : chr [1:75817] \"2035-01-01T00:00:00\" \"2035-07-15T00:00:00\" \"2035-01-01T00:00:00\" \"2035-01-01T00:00:00\" ...\n  ..$ _raw_source      : chr [1:75817] \"Existing Corporate Structure Data\" \"Oceanus Corporations Monthly - Jun '35\" \"Existing Corporate Structure Data\" \"Existing Corporate Structure Data\" ...\n  ..$ _algorithm       : chr [1:75817] \"Automatic Import\" \"Manual Entry\" \"Automatic Import\" \"Automatic Import\" ...\n  ..$ source           : chr [1:75817] \"Avery Inc\" \"Berger-Hayes\" \"Bowers Group\" \"Bowman-Howe\" ...\n  ..$ target           : chr [1:75817] \"Allen, Nichols and Thompson\" \"Jensen, Morris and Downs\" \"Barnett Inc\" \"Bennett Ltd\" ...\n  ..$ key              : int [1:75817] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ end_date         : chr [1:75817] NA NA NA NA ...\n\n\n\n\n\n\n\n\nNote\n\n\n\nmc3_date[[“nodes”]] dataframe contains 15 columns and 60520 rows.\nmc3_date[[“links”]] dataframe contains 11 columns and 75817 rows.\n\n\n\n\n\n\n\n\nNote\n\n\n\nOn closer inspection of mc3_data, we note some issues to be rectified:\n\nColumns containing dates are treated as “Character” data type instead of date data type, which is incorrect. Thus, the data type of the following fields need to be changed to “Date”” data type:\n\nfounding_date\n_last_edited_date\n_date_added\nstart_date\n_last_edited_date\n_date_added\ndob\n\nSome columns have missing values, which need to be handled appropriately for ease of later analysis.\nSome columns are prefixed with “_”, we remove them to reduce chance of bugs later"
  },
  {
    "objectID": "Task/Q1.html#missing-values",
    "href": "Task/Q1.html#missing-values",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Missing Values",
    "text": "Missing Values\nIdentify the percentage of missing values within the dataset\n\n# Function to calculate missing value percentages\ncalculate_missing_percentage &lt;- function(df) {\n  total_values &lt;- nrow(df) * ncol(df)\n  missing_values &lt;- sum(is.na(df))\n  missing_percentage &lt;- (missing_values / total_values) * 100\n  return(missing_percentage)\n}\n\n\nNodesLinks\n\n\n\nnodes_missing_percentage &lt;- calculate_missing_percentage(mc3_data[[\"nodes\"]])\nnodes_missing_percentage\n\n[1] 35.11952\n\nnodes_missing_by_column &lt;- sapply(mc3_data[[\"nodes\"]], function(x) sum(is.na(x)) / length(x) * 100)\nnodes_missing_by_column\n\n             type           country   ProductServices    PointOfContact \n          0.00000           0.00000          85.34204          85.38334 \n        HeadOfOrg     founding_date           revenue  TradeDescription \n         85.35691          85.34204          85.36847          85.34204 \n  _last_edited_by _last_edited_date       _date_added       _raw_source \n          0.00000           0.00000           0.00000           0.00000 \n       _algorithm                id               dob \n          0.00000           0.00000          14.65796 \n\n\n\n\n\nlinks_missing_percentage &lt;- calculate_missing_percentage(mc3_data[[\"links\"]])\nlinks_missing_percentage\n\n[1] 9.059973\n\nlinks_missing_by_column &lt;- sapply(mc3_data[[\"links\"]], function(x) sum(is.na(x)) / length(x) * 100)\nlinks_missing_by_column\n\n       start_date              type   _last_edited_by _last_edited_date \n        0.1187069         0.0000000         0.0000000         0.0000000 \n      _date_added       _raw_source        _algorithm            source \n        0.0000000         0.0000000         0.0000000         0.0000000 \n           target               key          end_date \n        0.0000000         0.0000000        99.5410000 \n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNodes: Overall, there are 35.12% missing values. While most columns have no missing values, the majority of those with missing data pertain to optional attributes:\n\nProductServices (Optional) - 85.34%\nPointOfContact (Optional)- 85.38%\nHeadofOrg (Optional) - 85.36%\nfounding_date - 85.34%\nrevenue (Optional) - 85.37%\nTradeDescription (Optional) - 85.34%\ndob - 14.66%\n\nLinks: Overall, there are 9.06% missing values. Most of the columns do not contain missing values, except for:\n\nstart_date - 0.12%\nend_date (Optional) - 99.54%\n\nIn addition, according to the VAST2024 - MC3 Data Description file, all empty values in the revenue column are supposed to have been set to 0. However, there are still some values with “NA”."
  },
  {
    "objectID": "Task/Q1.html#setting-empty-values-in-revenue-to-0",
    "href": "Task/Q1.html#setting-empty-values-in-revenue-to-0",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Setting empty values in revenue to 0",
    "text": "Setting empty values in revenue to 0\nSet NA values to 0 to aid analysis\n\n# Create a copy of mc3_data\nmc3_data2 &lt;- mc3_data\n\n# Set empty values in revenue to 0 and save it to the new list\nmc3_data2$nodes$revenue &lt;- ifelse(is.na(mc3_data2$nodes$revenue) | mc3_data2$nodes$revenue == \"\", 0, mc3_data2$nodes$revenue)\n\nVerify changes\n\n# ensure no more missing values in revenue column\nsum(is.na(mc3_data2$nodes$revenue))\n\n[1] 0"
  },
  {
    "objectID": "Task/Q1.html#rename-columns",
    "href": "Task/Q1.html#rename-columns",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Rename Columns",
    "text": "Rename Columns\nRemove prefix “_” from columns to reduce chance of issues later\n\n# Function to remove leading underscores from column names\nremove_leading_underscores &lt;- function(df) {\n  colnames(df) &lt;- gsub(\"^_\", \"\", colnames(df))\n  return(df)\n}\n\n# Create a copy of mc3_data2 and name it mc3_data3\nmc3_data3 &lt;- mc3_data2\n\n# Apply the function to the nodes and links data frames in mc3_data3\nmc3_data3$nodes &lt;- remove_leading_underscores(mc3_data3$nodes)\nmc3_data3$links &lt;- remove_leading_underscores(mc3_data3$links)\n\nVerify changes\n\ncolnames(mc3_data3$nodes)\n\n [1] \"type\"             \"country\"          \"ProductServices\"  \"PointOfContact\"  \n [5] \"HeadOfOrg\"        \"founding_date\"    \"revenue\"          \"TradeDescription\"\n [9] \"last_edited_by\"   \"last_edited_date\" \"date_added\"       \"raw_source\"      \n[13] \"algorithm\"        \"id\"               \"dob\"             \n\ncolnames(mc3_data3$links)\n\n [1] \"start_date\"       \"type\"             \"last_edited_by\"   \"last_edited_date\"\n [5] \"date_added\"       \"raw_source\"       \"algorithm\"        \"source\"          \n [9] \"target\"           \"key\"              \"end_date\""
  },
  {
    "objectID": "Task/Q1.html#standardising-date-time-formats",
    "href": "Task/Q1.html#standardising-date-time-formats",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Standardising Date Time Formats",
    "text": "Standardising Date Time Formats\nIn preparation for temporal analysis\n\n# Create a copy of mc3_data3 and name it mc3_data4\nmc3_data4 &lt;- mc3_data3\n\n# Convert date columns to Date-Time type\nmc3_data4$nodes &lt;- mc3_data4$nodes %&gt;%\n  mutate(\n    founding_date = ymd_hms(founding_date),\n    last_edited_date = ymd_hms(last_edited_date),\n    date_added = ymd_hms(date_added),\n    dob = ymd_hms(dob)\n  )\n\nmc3_data4$links &lt;- mc3_data4$links %&gt;%\n  mutate(\n    start_date = ymd_hms(start_date),\n    last_edited_date = ymd_hms(last_edited_date),\n    date_added = ymd_hms(date_added),\n    end_date = ymd_hms(end_date)\n  )\n\n\n\n\n\n\n\nNote\n\n\n\nThe ymd_hms function is designed to work with character vectors and will return NA for any existing NA values. This means that any NA value in the original columns will remain NA after the conversion.\n\n\nVerify changes\n\n# View the first few rows of the date columns in nodes\nhead(mc3_data4$nodes %&gt;% select(founding_date, last_edited_date, date_added, dob))\n\n  founding_date last_edited_date date_added  dob\n1    1954-04-24       2035-01-01 2035-01-01 &lt;NA&gt;\n2    2009-06-12       2035-01-01 2035-01-01 &lt;NA&gt;\n3    2029-12-15       2035-01-01 2035-01-01 &lt;NA&gt;\n4    1972-02-16       2035-01-01 2035-01-01 &lt;NA&gt;\n5    1954-04-06       2035-01-01 2035-01-01 &lt;NA&gt;\n6    2031-09-30       2035-01-01 2035-01-01 &lt;NA&gt;\n\n# View the first few rows of the date columns in links\nhead(mc3_data4$links %&gt;% select(start_date))\n\n  start_date\n1 2016-10-29\n2 2035-06-03\n3 2028-11-20\n4 2024-09-04\n5 2034-11-12\n6 2007-04-06\n\n# Summary of date columns in nodes\nsummary(mc3_data4$nodes %&gt;% select(founding_date, last_edited_date, date_added, dob))\n\n founding_date                     last_edited_date               \n Min.   :1945-01-01 00:00:00.000   Min.   :2035-01-01 00:00:00.0  \n 1st Qu.:1968-01-11 00:00:00.000   1st Qu.:2035-01-01 00:00:00.0  \n Median :1991-07-03 00:00:00.000   Median :2035-01-01 00:00:00.0  \n Mean   :1991-04-22 15:54:58.072   Mean   :2035-01-02 10:34:13.4  \n 3rd Qu.:2014-09-04 12:00:00.000   3rd Qu.:2035-01-01 00:00:00.0  \n Max.   :2035-12-29 00:00:00.000   Max.   :2036-01-15 00:00:00.0  \n NA's   :51649                                                    \n   date_added                         dob                         \n Min.   :2035-01-01 00:00:00.0   Min.   :1970-01-02 00:00:00.000  \n 1st Qu.:2035-01-01 00:00:00.0   1st Qu.:1978-01-30 00:00:00.000  \n Median :2035-01-01 00:00:00.0   Median :1986-02-06 00:00:00.000  \n Mean   :2035-01-02 10:28:32.2   Mean   :1987-05-23 22:21:33.182  \n 3rd Qu.:2035-01-01 00:00:00.0   3rd Qu.:1995-05-13 00:00:00.000  \n Max.   :2036-01-15 00:00:00.0   Max.   :2017-03-20 00:00:00.000  \n                                 NA's   :9047                     \n\n# Summary of date columns in links\nsummary(mc3_data4$links %&gt;% select(start_date))\n\n   start_date                    \n Min.   :1952-05-31 00:00:00.00  \n 1st Qu.:2015-08-18 00:00:00.00  \n Median :2024-03-22 00:00:00.00  \n Mean   :2022-11-23 10:50:43.11  \n 3rd Qu.:2030-12-13 00:00:00.00  \n Max.   :2035-12-29 00:00:00.00  \n NA's   :14720                   \n\n# Check the types of the date columns in nodes\nstr(mc3_data4$nodes %&gt;% select(founding_date, last_edited_date, date_added, dob))\n\n'data.frame':   60520 obs. of  4 variables:\n $ founding_date   : POSIXct, format: \"1954-04-24\" \"2009-06-12\" ...\n $ last_edited_date: POSIXct, format: \"2035-01-01\" \"2035-01-01\" ...\n $ date_added      : POSIXct, format: \"2035-01-01\" \"2035-01-01\" ...\n $ dob             : POSIXct, format: NA NA ...\n\n# Check the types of the date columns in links\nstr(mc3_data4$links %&gt;% select(start_date))\n\n'data.frame':   75817 obs. of  1 variable:\n $ start_date: POSIXct, format: \"2016-10-29\" \"2035-06-03\" ...\n\n\n\nview(mc3_data4[[\"nodes\"]])\nview(mc3_data4[[\"links\"]])"
  },
  {
    "objectID": "Task/Q1.html#split-words",
    "href": "Task/Q1.html#split-words",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Split Words",
    "text": "Split Words\nThe steps below will be used to split text in type column of nodes into two columns: namely type1 and type2.\n\n# Make a copy of mc3_data4\nmc3_data5 &lt;- mc3_data4\n\n# Split the type column into two columns\nmc3_data5$nodes &lt;- mc3_data5$nodes %&gt;%\n  mutate(\n    type1 = sub(\"^(\\\\S+).*\", \"\\\\1\", type),\n    type2 = sub(\"^\\\\S+\\\\.(.*)\", \"\\\\1\", type)\n  )\n\n# If there's only one word in type, set type2 to NA\nmc3_data5$nodes$type2 &lt;- ifelse(grepl(\"\\\\.\", mc3_data5$nodes$type), mc3_data5$nodes$type2, NA)\n\n# Remove the original 'type' column\nmc3_data5$nodes &lt;- mc3_data5$nodes %&gt;%\n  select(-type)\n\nThe steps below will be used to split text in type column of links into two columns: namely type1 and type2.\n\n# Make a copy of mc3_data4\nmc3_data6 &lt;- mc3_data5\n\n# Split the type column into two columns\n# There are no special cases, exception left blank\nmc3_data6$links &lt;- mc3_data6$links %&gt;%\n  mutate(\n    type1 = sub(\"(.*?\\\\..*?)(\\\\.[^.]+)?$\", \"\\\\1\", type),\n    type2 = ifelse(grepl(\"\\\\.\", type), sub(\".*\\\\.\", \"\", type), \"\")\n  )\n\n# remove the original 'type' column\nmc3_data6$links &lt;- mc3_data6$links %&gt;%\n  select(-type)\n\nVerify changes\n\n# View the first few rows of the type columns in nodes\nhead(mc3_data6$nodes %&gt;% select(type1,type2))\n\n                        type1   type2\n1 Entity.Organization.Company Company\n2 Entity.Organization.Company Company\n3 Entity.Organization.Company Company\n4 Entity.Organization.Company Company\n5 Entity.Organization.Company Company\n6 Entity.Organization.Company Company\n\n# View the first few rows of the type columns in links\nhead(mc3_data6$links %&gt;% select(type1,type2))\n\n       type1           type2\n1 Event.Owns Shareholdership\n2 Event.Owns Shareholdership\n3 Event.Owns Shareholdership\n4 Event.Owns Shareholdership\n5 Event.Owns Shareholdership\n6 Event.Owns Shareholdership\n\n\n\nview(mc3_data6[[\"nodes\"]])\nview(mc3_data6[[\"links\"]])"
  },
  {
    "objectID": "Task/Q1.html#extract-nodes",
    "href": "Task/Q1.html#extract-nodes",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Extract Nodes",
    "text": "Extract Nodes\nFor Question 1\n\n#keep only necessary columns\nmc3_nodes_1 &lt;- as_tibble(mc3_data6$nodes) %&gt;%\n  select (-TradeDescription,\n          -last_edited_by,\n          -last_edited_date,\n          -algorithm,\n          -dob,\n          -type1)\n\nSave as rds file for future use\n\nwrite_rds(mc3_nodes_1, \"data/rds/mc3_nodes_1.rds\")"
  },
  {
    "objectID": "Task/Q1.html#extract-links",
    "href": "Task/Q1.html#extract-links",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Extract Links",
    "text": "Extract Links\nFor Question 1\n\nmc3_links_1 &lt;- as_tibble(mc3_data6$links) %&gt;%\n  select (-last_edited_by,\n          -last_edited_date,\n          -date_added,\n          -key,\n          -algorithm,\n          -type1,\n          -end_date)\n\nSave as rds file for future use\n\nwrite_rds(mc3_links_1, \"data/rds/mc3_links_1.rds\")"
  },
  {
    "objectID": "Task/Q1.html#number-of-transactions-over-time",
    "href": "Task/Q1.html#number-of-transactions-over-time",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Number of Transactions over Time",
    "text": "Number of Transactions over Time\nNumber of links can be used to determine transactions over time\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(transactions_over_time, aes(x = start_date, y = count)) +\n  geom_line() +\n  labs(title = \"Transactions Over Time\", x = \"Date\", y = \"Number of Transactions\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe dataset spans from year 1952 to 2035.\nWe can see that from the start of the dataset until about year 2000, there were relatively few transactions. There was a small spike after year 2000, proceeded by exponential growth around 2005. However, there was a dip in transactions in 2035.\nThe dip could be due to effects after SouthSeafood Express Corp was caught for illegal behaviour and eventually closed in 2035.\nAnalysis should focus on transactions from year 2005 onwards. Data analysed should also be aggregated by year.\n\n\n\nFilter data\nFilter data to only keep transactions from 2000 (5 years before 2005) to 2035 (end of dataset). We keep some data that occurs before the start of our period of interest to capture any recent changes to entities.\n\n# Filter the data frames to keep only data from the year 2000 and onwards\nmc3_links_1_filtered &lt;- mc3_links_1 %&gt;%\n  filter(start_date &gt;= as.Date(\"2000-01-01\"))\n\n\n\nAggregate Data by Year\n\n# Extract year for aggregation\nmc3_links_1_filtered2 &lt;- mc3_links_1_filtered %&gt;%\n  mutate(transaction_year = year(start_date))\n\n# Calculate the number of transactions per year\nyearly_txns &lt;- mc3_links_1_filtered2 %&gt;%\n  group_by(transaction_year) %&gt;%\n  summarise(num_transactions = n())\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n# Plot the number of transactions per year\nggplot(yearly_txns, aes(x = transaction_year, y = num_transactions)) +\n  geom_line(color = \"blue\") +\n  labs(title = \"Number of Transactions Per Year\",\n       x = \"Year\",\n       y = \"Number of Transactions\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIt is now clearer that the rapid growth in transactions started around 2005, before reaching its peak at 2034 and sharply dropping in 2035, likely due to after effects of the SouthSeafood Express Corp incident."
  },
  {
    "objectID": "Task/Q1.html#number-of-active-companies-per-year",
    "href": "Task/Q1.html#number-of-active-companies-per-year",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Number of Active Companies Per Year",
    "text": "Number of Active Companies Per Year\nDrop na values\n\nmc3_nodes2_1 &lt;- mc3_nodes_1 %&gt;%\n  drop_na(founding_date) # removes Persons and Persons CEO\n\nNumber of nodes can be used to determine the number of active companies per year.\n\n# Extract year for aggregation\nmc3_nodes3_1 &lt;- mc3_nodes2_1 %&gt;%\n  mutate(active_year = floor_date(founding_date, \"year\"))\n\n# Calculate the number of active companies per year\nactive_companies &lt;- mc3_nodes3_1 %&gt;%\n  group_by(active_year) %&gt;%\n  summarise(num_active_companies = n())\n\nSummary\n\n# Calculate the summary statistics\nsummary_stats &lt;- summary(active_companies$num_active_companies)\nsummary_stats\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  79.00   88.50   96.00   97.48  104.00  136.00 \n\n# Extract and save the mean\n# Round to 2 decimal places\nmean_active_companies &lt;- round(summary_stats[\"Mean\"], 2)\n\nPlot graph\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n# Plot the number of active companies over time\nggplot(active_companies, aes(x = active_year, y = num_active_companies)) +\n  # line plot\n  geom_line(color = \"darkgreen\") +\n  labs(title = \"Number of Active Companies Over Time\",\n       x = \"Date\",\n       y = \"Number of Active Companies\") +\n  # mean line\n  geom_hline(aes(yintercept = mean_active_companies), \n             linetype = \"dotted\", color = \"blue\") +\n  annotate(\"text\", x = min(active_companies$active_year), \n           y = mean_active_companies, \n           label = paste(\"Mean:\", mean_active_companies), \n           hjust = 0, vjust = -1, color = \"blue\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWhile there are fluctuations in the number of active companies over time, there is generally an increasing trend of the number of active companies over time, especially around 2010 onwards. This period shows a rising trend with the number of active companies reaching the highest values in the dataset. This is similar to that observed in the number of transactions over time, seen above.\nWe also see a dip around 2035, before the numbers increase again. Also likely due to the after effects of the SouthSeafood Express Corp incident."
  },
  {
    "objectID": "Task/Q1.html#centrality-measures",
    "href": "Task/Q1.html#centrality-measures",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Centrality Measures",
    "text": "Centrality Measures\n\nModifying network nodes and edges\nPrepare the edges dataframe for network analysis by:\n\nEnsuring all edges are unique.\nConverting columns to a uniform type.\nCalculating the weight of each edge (how many times each connection occurs).\nRemoving any self-loops.\n\n\nmc3_edges &lt;-\n  as_tibble(mc3_links_1_filtered2) %&gt;%\n  distinct() %&gt;%\n  mutate(source = as.character(source),\n         target = as.character(target),\n         type = as.character(type2),\n         tyear = as.integer(transaction_year)) %&gt;%\n  group_by(source, target, type,tyear) %&gt;%\n  summarise(weights = n()) %&gt;%\n  filter(source != target) %&gt;%\n  ungroup()\n\n\n\n\n\n\n\nNote\n\n\n\nThe resulting mc3_edges tibble contains the columns source, target, type, year, and weights, where each row represents a unique edge between two nodes with a specific type, and the weights column represents the number of times that edge occurs.\n\n\nClean and preprocess the nodes data by:\n\nEnsuring that each column has the correct data type for analysis.\nSelecting only the necessary columns for further analysis or visualization.\n\n\nmc3_nodes &lt;- as_tibble(mc3_nodes_1) %&gt;%\n  mutate(country = as.character(country), \n         id = as.character(id), \n         ProductServices = as.character(ProductServices), \n         revenue = as.numeric(as.character(revenue)), \n         type = as.character(type2)) %&gt;%\n  select(id, country, type, revenue, ProductServices)\n\n\n\n\n\n\n\nNote\n\n\n\nThe resulting mc3_nodes tibble contains the cleaned and correctly typed columns id, country, type, revenue, and ProductServices.\n\n\n\n\nKeeping unique values\nEdges\n\nunique_transaction_types_edges &lt;- mc3_edges %&gt;%\n  select(type) %&gt;%\n  distinct()\n\n# Display the unique transaction types\nprint(unique_transaction_types_edges)\n\n# A tibble: 4 × 1\n  type               \n  &lt;chr&gt;              \n1 Shareholdership    \n2 BeneficialOwnership\n3 WorksFor           \n4 FamilyRelationship \n\n\n\n\n\n\n\n\nNote\n\n\n\nThere are 4 types of edges, namely:\n\nShareholdership\nWorksFor\nBeneficialOwnership\nFamilyRelationship\n\n\n\nNodes\n\nunique_transaction_types_nodes &lt;- mc3_nodes %&gt;%\n  select(type) %&gt;%\n  distinct()\n\n# Display the unique transaction types\nprint(unique_transaction_types_nodes)\n\n# A tibble: 8 × 1\n  type            \n  &lt;chr&gt;           \n1 Company         \n2 LogisticsCompany\n3 FishingCompany  \n4 FinancialCompany\n5 NewsCompany     \n6 NGO             \n7 Person          \n8 CEO             \n\n\n\n\n\n\n\n\nNote\n\n\n\nThere are 8 types of nodes, namely:\n\nCompany\nLogisticsCompany\nFishingCompany\nFinancialCompany\nNewsCompany\nNGO\nPerson\nCEO\n\n\n\n\n\nExtract all the source and target nodes\nExtract all the source and target nodes, then, drop any unmatched nodes\n\nid1 &lt;- mc3_edges %&gt;%\n  select(source) %&gt;%\n  rename(id = source)\n\nid2 &lt;- mc3_edges %&gt;%\n  select(target) %&gt;%\n  rename(id = target)\n\nmc3_nodes1 &lt;- rbind(id1, id2) %&gt;%\n  distinct() %&gt;%\n  left_join(mc3_nodes, by = c(\"id\" = \"id\")) %&gt;%\n  mutate(unmatched = \"drop\")\n\nVerify results\n\nprint(mc3_nodes1)\n\n# A tibble: 60,489 × 6\n   id                     country     type     revenue ProductServices unmatched\n   &lt;chr&gt;                  &lt;chr&gt;       &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;    \n 1 4. SeaCargo Ges.m.b.H. Oceanus     Logisti…  23304. Tuna, sword fi… drop     \n 2 9. RiverLine CJSC      Oceanus     Company   50134. Unknown         drop     \n 3 Aaron Acosta           Mawalara    Person        0  &lt;NA&gt;            drop     \n 4 Aaron Allen            Galduzim    Person        0  &lt;NA&gt;            drop     \n 5 Aaron Austin           Kethilim    Person        0  &lt;NA&gt;            drop     \n 6 Aaron Baker            Azurionix   Person        0  &lt;NA&gt;            drop     \n 7 Aaron Barry            Kondanovia  Person        0  &lt;NA&gt;            drop     \n 8 Aaron Bauer            Rio Solovia Person        0  &lt;NA&gt;            drop     \n 9 Aaron Bishop           Osterivaro  Person        0  &lt;NA&gt;            drop     \n10 Aaron Bolton           n.a.        Person        0  &lt;NA&gt;            drop     \n# ℹ 60,479 more rows\n\n\n\n\nCreate Graph Object\nCreate graph object and calculate centrality measures\n\nmc3_graph &lt;- tbl_graph(nodes = mc3_nodes1, edges = mc3_edges, directed = TRUE) %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness(),\n         closeness_centrality = centrality_closeness())\n  theme_graph()\n## List of 136\n##  $ line                            :List of 6\n##   ..$ colour       : chr \"black\"\n##   ..$ linewidth    : num 0.5\n##   ..$ linetype     : num 1\n##   ..$ lineend      : chr \"butt\"\n##   ..$ arrow        : logi FALSE\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n##  $ rect                            :List of 5\n##   ..$ fill         : chr \"white\"\n##   ..$ colour       : chr \"black\"\n##   ..$ linewidth    : num 0.5\n##   ..$ linetype     : num 1\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n##  $ text                            :List of 11\n##   ..$ family       : chr \"Arial Narrow\"\n##   ..$ face         : chr \"plain\"\n##   ..$ colour       : chr \"black\"\n##   ..$ size         : num 11\n##   ..$ hjust        : num 0.5\n##   ..$ vjust        : num 0.5\n##   ..$ angle        : num 0\n##   ..$ lineheight   : num 0.9\n##   ..$ margin       : 'margin' num [1:4] 0points 0points 0points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : logi FALSE\n##   ..$ inherit.blank: logi FALSE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ title                           : NULL\n##  $ aspect.ratio                    : NULL\n##  $ axis.title                      : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ axis.title.x                    :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : NULL\n##   ..$ vjust        : num 1\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 2.75points 0points 0points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.title.x.top                :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : NULL\n##   ..$ vjust        : num 0\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 0points 2.75points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.title.x.bottom             : NULL\n##  $ axis.title.y                    :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : NULL\n##   ..$ vjust        : num 1\n##   ..$ angle        : num 90\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 2.75points 0points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.title.y.left               : NULL\n##  $ axis.title.y.right              :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : NULL\n##   ..$ vjust        : num 1\n##   ..$ angle        : num -90\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.75points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.text                       : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ axis.text.x                     :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : NULL\n##   ..$ vjust        : num 1\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 2.2points 0points 0points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.text.x.top                 :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : NULL\n##   ..$ vjust        : num 0\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 0points 2.2points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.text.x.bottom              : NULL\n##  $ axis.text.y                     :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : num 1\n##   ..$ vjust        : NULL\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 0points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.text.y.left                : NULL\n##  $ axis.text.y.right               :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : num 0\n##   ..$ vjust        : NULL\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.2points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.text.theta                 : NULL\n##  $ axis.text.r                     :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : num 0.5\n##   ..$ vjust        : NULL\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 2.2points\n##   .. ..- attr(*, \"unit\")= int 8\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ axis.ticks                      : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ axis.ticks.x                    : NULL\n##  $ axis.ticks.x.top                : NULL\n##  $ axis.ticks.x.bottom             : NULL\n##  $ axis.ticks.y                    : NULL\n##  $ axis.ticks.y.left               : NULL\n##  $ axis.ticks.y.right              : NULL\n##  $ axis.ticks.theta                : NULL\n##  $ axis.ticks.r                    : NULL\n##  $ axis.minor.ticks.x.top          : NULL\n##  $ axis.minor.ticks.x.bottom       : NULL\n##  $ axis.minor.ticks.y.left         : NULL\n##  $ axis.minor.ticks.y.right        : NULL\n##  $ axis.minor.ticks.theta          : NULL\n##  $ axis.minor.ticks.r              : NULL\n##  $ axis.ticks.length               : 'simpleUnit' num 2.75points\n##   ..- attr(*, \"unit\")= int 8\n##  $ axis.ticks.length.x             : NULL\n##  $ axis.ticks.length.x.top         : NULL\n##  $ axis.ticks.length.x.bottom      : NULL\n##  $ axis.ticks.length.y             : NULL\n##  $ axis.ticks.length.y.left        : NULL\n##  $ axis.ticks.length.y.right       : NULL\n##  $ axis.ticks.length.theta         : NULL\n##  $ axis.ticks.length.r             : NULL\n##  $ axis.minor.ticks.length         : 'rel' num 0.75\n##  $ axis.minor.ticks.length.x       : NULL\n##  $ axis.minor.ticks.length.x.top   : NULL\n##  $ axis.minor.ticks.length.x.bottom: NULL\n##  $ axis.minor.ticks.length.y       : NULL\n##  $ axis.minor.ticks.length.y.left  : NULL\n##  $ axis.minor.ticks.length.y.right : NULL\n##  $ axis.minor.ticks.length.theta   : NULL\n##  $ axis.minor.ticks.length.r       : NULL\n##  $ axis.line                       : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ axis.line.x                     : NULL\n##  $ axis.line.x.top                 : NULL\n##  $ axis.line.x.bottom              : NULL\n##  $ axis.line.y                     : NULL\n##  $ axis.line.y.left                : NULL\n##  $ axis.line.y.right               : NULL\n##  $ axis.line.theta                 : NULL\n##  $ axis.line.r                     : NULL\n##  $ legend.background               : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ legend.margin                   : 'margin' num [1:4] 5.5points 5.5points 5.5points 5.5points\n##   ..- attr(*, \"unit\")= int 8\n##  $ legend.spacing                  : 'simpleUnit' num 11points\n##   ..- attr(*, \"unit\")= int 8\n##  $ legend.spacing.x                : NULL\n##  $ legend.spacing.y                : NULL\n##  $ legend.key                      : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ legend.key.size                 : 'simpleUnit' num 1.2lines\n##   ..- attr(*, \"unit\")= int 3\n##  $ legend.key.height               : NULL\n##  $ legend.key.width                : NULL\n##  $ legend.key.spacing              : 'simpleUnit' num 5.5points\n##   ..- attr(*, \"unit\")= int 8\n##  $ legend.key.spacing.x            : NULL\n##  $ legend.key.spacing.y            : NULL\n##  $ legend.frame                    : NULL\n##  $ legend.ticks                    : NULL\n##  $ legend.ticks.length             : 'rel' num 0.2\n##  $ legend.axis.line                : NULL\n##  $ legend.text                     :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : 'rel' num 0.8\n##   ..$ hjust        : NULL\n##   ..$ vjust        : NULL\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : NULL\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ legend.text.position            : NULL\n##  $ legend.title                    :List of 11\n##   ..$ family       : NULL\n##   ..$ face         : NULL\n##   ..$ colour       : NULL\n##   ..$ size         : NULL\n##   ..$ hjust        : num 0\n##   ..$ vjust        : NULL\n##   ..$ angle        : NULL\n##   ..$ lineheight   : NULL\n##   ..$ margin       : NULL\n##   ..$ debug        : NULL\n##   ..$ inherit.blank: logi TRUE\n##   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n##  $ legend.title.position           : NULL\n##  $ legend.position                 : chr \"right\"\n##  $ legend.position.inside          : NULL\n##  $ legend.direction                : NULL\n##  $ legend.byrow                    : NULL\n##  $ legend.justification            : chr \"center\"\n##  $ legend.justification.top        : NULL\n##  $ legend.justification.bottom     : NULL\n##  $ legend.justification.left       : NULL\n##  $ legend.justification.right      : NULL\n##  $ legend.justification.inside     : NULL\n##  $ legend.location                 : NULL\n##  $ legend.box                      : NULL\n##  $ legend.box.just                 : NULL\n##  $ legend.box.margin               : 'margin' num [1:4] 0cm 0cm 0cm 0cm\n##   ..- attr(*, \"unit\")= int 1\n##  $ legend.box.background           : list()\n##   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n##  $ legend.box.spacing              : 'simpleUnit' num 11points\n##   ..- attr(*, \"unit\")= int 8\n##   [list output truncated]\n##  - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n##  - attr(*, \"complete\")= logi TRUE\n##  - attr(*, \"validate\")= logi TRUE\n\n\n\nNetwork Graph\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n# Display the network graph\nggraph(mc3_graph, layout = \"fr\") + # Using Fruchterman-Reingold layout\n  geom_edge_link(aes(edge_alpha = 0.8, edge_width = 0.8)) + # Customize edge appearance\n  geom_node_point(aes(size = betweenness_centrality, color = closeness_centrality)) + # Customize node appearance\n  scale_color_viridis_c() + # Use viridis color scale\n  theme_void() + # Use a void theme\n  labs(title = \"Refined Network Graph of Atypical Business Transactions\",\n       subtitle = \"Nodes colored by closeness centrality and sized by betweenness centrality\",\n       caption = \"Data Source: mc3.json\") # Add titles and captions\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe grey circular portion in the center of the network graph does not represent any specific data or entities. It is a visual byproduct resulting from the dense clustering of nodes and edges in that central region. This effect is particularly noticeable in dense, highly interconnected network visualizations where nodes and edges are concentrated in a small space.\nThus, we filter the nodes to refine the graph.\n\n\n\n\nRefined Network Graph\n\nTop Nodes\nIdentify top 20 nodes by betweenness centrality\n\n# Identify top nodes by betweenness centrality\ntop_nodes &lt;- mc3_graph %&gt;% \n  as_tibble()\n\n# Identify top 20 nodes by betweenness centrality\ntop_nodes2 &lt;- top_nodes %&gt;% \n  top_n(20, wt = betweenness_centrality)\n\n\n\nList of most active people and businesses\n\ntop_nodes2\n\n# A tibble: 21 × 8\n   id     country type  revenue ProductServices unmatched betweenness_centrality\n   &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;                      &lt;dbl&gt;\n 1 Corte… Mawala… Comp…  6.99e3 Finish carpent… drop                          22\n 2 Evans… Oceanus Fish…  5.50e4 Processing and… drop                          29\n 3 Fried… Mawand… Comp…  1.64e4 Grocery produc… drop                          38\n 4 Gvard… Nalaki… Comp…  6.85e4 Shipping servi… drop                          33\n 5 Hill … Oceanus Comp…  4.75e3 Unknown         drop                          31\n 6 Howel… Mawand… Comp…  7.74e6 High-grade met… drop                          54\n 7 Johns… Valtal… Comp…  3.35e4 Machinery and … drop                          33\n 8 Kaise… Isla S… Comp…  2.32e4 Canned and cur… drop                          26\n 9 King … Oceanus Comp…  0      Operation of i… drop                          29\n10 Lane … Imazam  Fish…  4.80e3 Fish and seafo… drop                          33\n# ℹ 11 more rows\n# ℹ 1 more variable: closeness_centrality &lt;dbl&gt;\n\n\n\n\n\n\n\n\nNote\n\n\n\nIt is likely that these entities on the top 10 list are big players in the industry and control information and resources.\nHigh betweenness centrality means that a node plays a more crucial role in connecting other nodes. It can be an indicator of:\n\nBrokerage Role: Nodes with high betweenness centrality often act as bridges or intermediaries between different parts of the network. They control the flow of information, resources, or interactions between other nodes.\nControl and Influence: Nodes with high betweenness centrality have the potential to control the flow of information or resources in the network. They may have more influence or power over the network dynamics compared to other nodes.\n\n\n\nPlot refined graph\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n# Extract IDs of top nodes\n# Extract IDs of top nodes\ntop_node_ids &lt;- top_nodes$id\n\n# Filter the graph to include only top nodes and their incident edges\ntop_graph &lt;- mc3_graph %&gt;%\n  activate(nodes) %&gt;%\n  filter(id %in% top_node_ids) %&gt;%\n  activate(edges) %&gt;%\n  filter(edge_is_incident(top_node_ids))\n\n# Plot the network graph with top nodes\nggraph(top_graph, layout = \"fr\") + \n  geom_edge_link(aes(edge_alpha = 0.1, edge_width = 0.1)) +\n  geom_node_point(aes(size = betweenness_centrality, color = closeness_centrality)) +\n  scale_color_viridis_c() +\n  theme_void() +\n  labs(title = \"Top 20 Nodes Network Graph\",\n       subtitle = \"Nodes colored by closeness centrality and sized by betweenness centrality\",\n       caption = \"Data Source: mc3.json\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that for the top nodes, they are highly interconnected. To the extent that the graph becomes less interpretable.\n\n\n\n\n\nCentrality Over Time\nPlot Graph\n\n# Assuming you have a function to calculate centrality for each year\ncalculate_centrality_over_time &lt;- function(nodes, edges, time_unit = \"year\")\n  {\n  edges &lt;- edges %&gt;%\n    mutate(period = as.Date(paste0(tyear, \"-01-01\")))\n  \n  centrality_results &lt;- edges %&gt;%\n    group_by(period) %&gt;%\n    do({\n      current_edges &lt;- .\n      current_nodes &lt;- nodes %&gt;% filter(id %in% unique(c(current_edges$source, current_edges$target)))\n      graph &lt;- tbl_graph(nodes = current_nodes, edges = current_edges, directed = TRUE)\n      graph %&gt;%\n        mutate(betweenness = centrality_betweenness()) %&gt;%\n        as_tibble() %&gt;%\n        summarise(mean_betweenness = mean(betweenness, na.rm = TRUE))\n    }) %&gt;%\n    ungroup()\n  \n  return(centrality_results)\n}\n\n# Calculate centrality measures over time\ncentrality_over_time &lt;- calculate_centrality_over_time(mc3_nodes1, mc3_edges)\n\n# Plot centrality measures over time\nggplot(centrality_over_time, aes(x = period, y = mean_betweenness)) +\n  geom_line(color = \"red\") +\n  labs(title = \"Average Betweenness Centrality Per Year\",\n       x = \"Year\",\n       y = \"Mean Betweenness Centrality\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis graph shows that there is a increasing trend of the average betweenness centrality per year over time.\nFrom around 2000 to 2020, the average betweenness centrality remains relatively low and fluctuates within a small range, indicating a stable network structure during this period. However, starting around 2025, there is a sharp and dramatic increase in the average betweenness centrality.\nThis sudden rise suggests a significant change in the network dynamics, where certain nodes or entities are becoming increasingly important as bridges or intermediaries connecting different parts of the network. Such a drastic increase could potentially indicate the emergence of new influential players, changes in transaction patterns, or the formation of new connections and pathways within the network.\nThe rapid growth in average betweenness centrality implies that the network structure is becoming more centralized, with a smaller number of nodes acting as critical hubs or gatekeepers, controlling the flow of information or transactions within the network."
  },
  {
    "objectID": "Task/Q1.html#key-influencers",
    "href": "Task/Q1.html#key-influencers",
    "title": "Take-home Exercise 3 - Vast Challenge 2024",
    "section": "Key Influencers",
    "text": "Key Influencers\n\nExtract key influencers and their edges\n\n# Filter mc3_edges to keep rows where source ID is in top_nodes2\nkeypersonnel &lt;- mc3_edges %&gt;%\n  filter(source %in% top_nodes2$id)\n\n\n\nKey influencers of the industry\n\nunique(keypersonnel$source)\n\n [1] \"Cortez LLC\"                       \"Evans-Pearson\"                   \n [3] \"Friedman, Gibson and Garcia\"      \"GvardeyskAmerica Shipping Plc\"   \n [5] \"Hill PLC\"                         \"Howell LLC\"                      \n [7] \"Johnson, Perez and Salinas\"       \"Kaiser, Warren and Shepard\"      \n [9] \"King and Sons\"                    \"Lane Group\"                      \n[11] \"Lee-Ramirez\"                      \"Mcpherson-Wright\"                \n[13] \"NamRiver Transit A/S\"             \"Osborne, Saunders and Brown\"     \n[15] \"Patel-Miller\"                     \"Ramos, Jordan and Stewart\"       \n[17] \"Rivera, Lee and Carroll\"          \"Russell and Sons\"                \n[19] \"Stein, Taylor and Williams\"       \"StichtingMarine Shipping Company\"\n[21] \"Vasquez-Gonzalez\"                \n\n\n\n\n\n\n\n\nNote\n\n\n\nThe key influencers are:\n\nCortez LLC\nEvans-Pearson\nFriedman, Gibson and Garcia\nGvardeyskAmerica Shipping Plc\nHill PLC\nHowell LLC\nJohnson, Perez and Salinas\nKaiser, Warren and Shepard\nKing and Sons\nLane Group\nLee-Ramirez\nMcpherson-Wright\nNamRiver Transit A/S\nOsborne, Saunders and Brown\nPatel-Miller\nRamos, Jordan and Stewart\nRivera, Lee and Carroll Russell and Sons\nStein, Taylor and Williams\nStichtingMarine Shipping Company\nVasquez-Gonzalez\n\n\n\nRelationship between influencers and their links\n\nunique(keypersonnel$type)\n\n[1] \"Shareholdership\"\n\n\n\n\n\n\n\n\nNote\n\n\n\nThere is only 1 type of relationship between the influencers and their links. The influencers are shareholders of those they are linked to.\n\n\n\n\nNetwork Graph\nCreate Graph Object\n\n# Create a nodes dataframe from the unique source and target values\nnodes &lt;- unique(c(keypersonnel$source, keypersonnel$target)) %&gt;%\n  data.frame(name = .)\n\n# Create the graph object using tbl_graph\ngraph_data &lt;- tbl_graph(nodes = nodes,\n                        edges = keypersonnel %&gt;%\n                          rename(from = source, to = target),\n                        directed = TRUE)\n\nPlot Graph\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n# Plot the directed graph\nggraph(graph_data, layout = \"fr\") +  # Using Fruchterman-Reingold layout\n  geom_edge_link(aes(label = as.character(tyear)),  # Only label with tyear\n                 arrow = arrow(length = unit(4, 'mm')),  # Add arrows to indicate direction\n                 end_cap = circle(3, 'mm'),  # Cap the end of the edges with a circle\n                 label_dodge = unit(2, \"mm\"),  # Adjust label position to avoid overlap\n                 label_size = 3,  # Set label size\n                 edge_width = 0.8,  # Set edge width\n                 edge_alpha = 0.8) +  # Set edge transparency\n  geom_node_point(size = 5, color = \"blue\") +  # Customize node appearance\n  geom_node_text(aes(label = name), vjust = 1.5, size = 4) +  # Add node labels\n  theme_void() +  # Use a void theme\n  labs(title = \"Directed Network Graph of Key Personnel Transactions\",\n       subtitle = \"Nodes represent unique sources and targets, edges labeled with year\",\n       caption = \"Data Source: keypersonnel\")  # Add titles and captions\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nMost number of links:\n\n\n\nEntity Name\nNumber of Links\n\n\n\n\nGvardeyskAmerica Shipping Plc\n4\n\n\nRivera, Lee and Carroll\n3\n\n\nCortez LLC\n2\n\n\nKaiser, Warren and Shepard\n2\n\n\nMcpherson-Wright\n2\n\n\nPatel-Miller\n2\n\n\nStichtingMarine Shipping Company\n2\n\n\nVasquez-Gonzalez\n2\n\n\n\nThe earliest link: Lane Group has been the shareholder of Howell LLC since 2020.\nThe most recent link: GvardeyskAmerica Shipping Plc is the shareholder of ArawakFish Cargo Ges.m.b.H.. since 2034."
  },
  {
    "objectID": "Proposal/Proposal.html",
    "href": "Proposal/Proposal.html",
    "title": "Proposal",
    "section": "",
    "text": "The project will focus on developing visual analytics tools using R to analyze and visualize changes in corporate structures and influence within the commercial fishing industry in Oceanus. The goal is to provide FishEye International with insights into the dynamic business environment, especially in light of the recent illegal fishing activities by SouthSeafood Express Corp.\n\n\n\n\nVisualization of Temporal Corporate Structures:\n\nDevelop visual tools to highlight changes in corporate structures over time.\nFocus on shareholder and ownership relationships.\nTrack the influence of key individuals and entities within the business network.\n\nAnalysis of Business Transactions:\n\nIdentify and visualize typical and atypical business transactions such as mergers, acquisitions, and investments.\nInfer motivations behind changes in business activities.\nHighlight how these transactions impact corporate influence and market dynamics.\n\nImpact of SouthSeafood Express Corp’s Legal Troubles:\n\nVisualize the network associated with SouthSeafood Express Corp.\nAnalyze changes in this network following the corporation’s closure due to illegal activities.\nIdentify companies that benefited from SouthSeafood Express Corp’s downfall.\nDetect other suspicious transactions potentially related to illegal fishing.\n\n\n\n\n\n\nTemporal Patterns in Corporate Structures:\n\nCreate visualizations that illustrate changes in corporate structures over time.\nHighlight the most active individuals and businesses within the network.\nExample: Timeline visualizations showing changes in ownership and shareholder relationships.\n\nTypical and Atypical Business Transactions:\n\nUse visual analytics to display examples of mergers, acquisitions, and other significant transactions.\nInfer motivations behind these transactions based on visual patterns.\nExample: Network diagrams highlighting new connections and changes in existing relationships.\nExample: Usage of widyr package to ‘casts’ a tidy dataset into a wide matrix before performing a correlation operation on it.\n\nInfluence Dynamics:\n\nDevelop a visual approach to examine how the influence of a company changes over time.\nInfer ownership or influence within the network.\nExample: Influence maps showing the rise and fall of key players in the industry. This is done through the usage of **tidygraph to create nodes and edges data appropriate for map visualisation\n\nImpact of SouthSeafood Express Corp’s Closure:\n\nVisualize the business network of SouthSeafood Express Corp before and after its closure.\nIdentify companies that gained from its legal troubles.\nDetect suspicious transactions that might indicate further illegal activities.\nExample: Comparative network analysis showing shifts in influence and ownership.\n\n\n\n\n\n\nData Collection:\n\nUse company records, ownership, shareholder information, and transaction data.\nEnsure data is cleaned and structured for further analysis.\n\nVisualization Tools:\n\nUtilize R packages such as ggplot2 for general plotting and ggraph for network visualization.\nEmploy igraph for network analysis.\nUse tidyverse for data manipulation and lubridate for handling dates and times.\n\nAnalysis Techniques:\n\nApply network analysis to detect influential individuals and companies using igraph.\nUse clustering and pattern recognition with dplyr and tidyr to identify typical and atypical transactions.\nLeverage temporal analysis to track changes and trends over time with lubridate.\n\n\n\n\n\n\nData Manipulation:\n\ndplyr: For data manipulation.\ntidyr: For tidying data and separating columns.\nreadr: For reading data files.\nlubridate: For date and time manipulation.\n\nVisualization:\n\nggplot2: For creating static visualizations.\nggraph: For creating network visualizations.\nplotly: For creating interactive visualizations.\nshiny: For developing interactive web applications.\n\nNetwork Analysis:\n\nigraph: For creating and analyzing network graphs.\n** test\n\nText Mining (if needed):\n\ntidytext: For text mining and tokenization.\ntm: For text mining."
  },
  {
    "objectID": "Proposal/Proposal.html#project-topic",
    "href": "Proposal/Proposal.html#project-topic",
    "title": "Proposal",
    "section": "",
    "text": "The project will focus on developing visual analytics tools using R to analyze and visualize changes in corporate structures and influence within the commercial fishing industry in Oceanus. The goal is to provide FishEye International with insights into the dynamic business environment, especially in light of the recent illegal fishing activities by SouthSeafood Express Corp."
  },
  {
    "objectID": "Proposal/Proposal.html#project-scope",
    "href": "Proposal/Proposal.html#project-scope",
    "title": "Proposal",
    "section": "",
    "text": "Visualization of Temporal Corporate Structures:\n\nDevelop visual tools to highlight changes in corporate structures over time.\nFocus on shareholder and ownership relationships.\nTrack the influence of key individuals and entities within the business network.\n\nAnalysis of Business Transactions:\n\nIdentify and visualize typical and atypical business transactions such as mergers, acquisitions, and investments.\nInfer motivations behind changes in business activities.\nHighlight how these transactions impact corporate influence and market dynamics.\n\nImpact of SouthSeafood Express Corp’s Legal Troubles:\n\nVisualize the network associated with SouthSeafood Express Corp.\nAnalyze changes in this network following the corporation’s closure due to illegal activities.\nIdentify companies that benefited from SouthSeafood Express Corp’s downfall.\nDetect other suspicious transactions potentially related to illegal fishing."
  },
  {
    "objectID": "Proposal/Proposal.html#tasks-and-questions",
    "href": "Proposal/Proposal.html#tasks-and-questions",
    "title": "Proposal",
    "section": "",
    "text": "Temporal Patterns in Corporate Structures:\n\nCreate visualizations that illustrate changes in corporate structures over time.\nHighlight the most active individuals and businesses within the network.\nExample: Timeline visualizations showing changes in ownership and shareholder relationships.\n\nTypical and Atypical Business Transactions:\n\nUse visual analytics to display examples of mergers, acquisitions, and other significant transactions.\nInfer motivations behind these transactions based on visual patterns.\nExample: Network diagrams highlighting new connections and changes in existing relationships.\nExample: Usage of widyr package to ‘casts’ a tidy dataset into a wide matrix before performing a correlation operation on it.\n\nInfluence Dynamics:\n\nDevelop a visual approach to examine how the influence of a company changes over time.\nInfer ownership or influence within the network.\nExample: Influence maps showing the rise and fall of key players in the industry. This is done through the usage of **tidygraph to create nodes and edges data appropriate for map visualisation\n\nImpact of SouthSeafood Express Corp’s Closure:\n\nVisualize the business network of SouthSeafood Express Corp before and after its closure.\nIdentify companies that gained from its legal troubles.\nDetect suspicious transactions that might indicate further illegal activities.\nExample: Comparative network analysis showing shifts in influence and ownership."
  },
  {
    "objectID": "Proposal/Proposal.html#methodology",
    "href": "Proposal/Proposal.html#methodology",
    "title": "Proposal",
    "section": "",
    "text": "Data Collection:\n\nUse company records, ownership, shareholder information, and transaction data.\nEnsure data is cleaned and structured for further analysis.\n\nVisualization Tools:\n\nUtilize R packages such as ggplot2 for general plotting and ggraph for network visualization.\nEmploy igraph for network analysis.\nUse tidyverse for data manipulation and lubridate for handling dates and times.\n\nAnalysis Techniques:\n\nApply network analysis to detect influential individuals and companies using igraph.\nUse clustering and pattern recognition with dplyr and tidyr to identify typical and atypical transactions.\nLeverage temporal analysis to track changes and trends over time with lubridate."
  },
  {
    "objectID": "Proposal/Proposal.html#r-packages-to-use",
    "href": "Proposal/Proposal.html#r-packages-to-use",
    "title": "Proposal",
    "section": "",
    "text": "Data Manipulation:\n\ndplyr: For data manipulation.\ntidyr: For tidying data and separating columns.\nreadr: For reading data files.\nlubridate: For date and time manipulation.\n\nVisualization:\n\nggplot2: For creating static visualizations.\nggraph: For creating network visualizations.\nplotly: For creating interactive visualizations.\nshiny: For developing interactive web applications.\n\nNetwork Analysis:\n\nigraph: For creating and analyzing network graphs.\n** test\n\nText Mining (if needed):\n\ntidytext: For text mining and tokenization.\ntm: For text mining."
  },
  {
    "objectID": "MeetingMinutes/MeetingMinutes1.html",
    "href": "MeetingMinutes/MeetingMinutes1.html",
    "title": "Meeting Minutes 1",
    "section": "",
    "text": "Meeting Minutes 1\nDate: 17 May 2024\nAttendance: All present\nProposed Project Timeline:\nWeek 1: Data Wrangling and Initial Visualizations\nMay 17 (Friday) - May 19 (Sunday): Initial Setup and Data Wrangling\n\nAlicia\n\nContinue working on cleaning and wrangling the data, focusing on date & time columns using Lubridate.\nEnsure all date columns are properly formatted and handle any remaining missing values\n\n\n\n\nKeKe\n\nValidate the integrity of the data after wrangling.\nIdentify key variables and metrics needed for the visualizations (e.g., ownership changes, transaction types).\n\nYouTing\n\nSet up the Quarto website structure if not already done.\nPrepare a detailed project plan and task breakdown for the group.\n\n\nMay 20 (Monday) - May 22 (Wednesday): Initial Visualizations\n\nAlicia\n\nCreate initial visualizations using ggplot2 or other relevant R visualization libraries.\nFocus on time series plots to show changes in corporate structures and ownership over time.\n\nKeKe\n\nDevelop network graphs to visualize relationships between entities using packages like igraph or ggraph.\nHighlight key individuals and their connections to companies.\n\nYouTing\n\nIntegrate the initial visualizations into the Quarto website.\nStart drafting the narrative for the visualizations, explaining what each one shows.\n\n\nWeek 2: Advanced Visualizations and Analysis\nMay 23 (Thursday) - May 26 (Sunday): Advanced Visualizations\n\nAlicia\n\nEnhance the visualizations by adding interactivity using Shiny\nCreate additional visualizations to highlight atypical business transactions and inferences about influence.\n\nKeKe\n\nConduct a detailed analysis of the SouthSeafood Express Corp network.\nVisualize changes in this network and identify companies that benefited from their legal troubles.\n\nYouTing\n\nGather feedback from team members and iterate on the visualizations.\nUpdate the Quarto website with new visualizations and findings.\n\n\nMay 27 (Monday) - May 30 (Thursday): Analysis and Inference\n\nAlicia\n\nPerform in-depth analysis to infer motivations behind business activities and transactions.\nDocument findings and prepare visual evidence.\n\nKeke\n\nContinue exploring suspicious transactions and potential illegal activities.\nPrepare visualizations and analysis to support these findings.\n\nYouTing\n\nIntegrate advanced visualizations and analyses into the website.\nEnsure the website is user-friendly and all visualizations are correctly embedded.\n\n\nWeek 3: Finalization and Presentation Preparation\nMay 31 (Friday) - June 4 (Tuesday): Final Touches\n\nAlicia\n\nFinalize all visualizations and ensure they are polished and accurate.\nDouble-check the data integrity and visualization accuracy.\n\nKeke\n\nConduct a thorough review of all analyses and ensure consistency.\nHelp Person A with any final touches on visualizations.\n\nYouTing\n\nFinalize the Quarto website, ensuring all sections are complete and the content flows logically.\nPrepare the written responses for each question in the assignment, ensuring they are concise and supported by visual evidence.\n\n\nJune 5 (Wednesday) - June 8 (Saturday): Poster and Presentation Preparation\n\nAlicia\n\nDesign the poster using tools like Canva or PowerPoint.\nEnsure the poster includes key visualizations, findings, and concise explanations.\n\nKeKe\n\nAssist in designing the poster.\nPrepare talking points and scripts for the presentation.\n\nYouTing\n\nOversee the poster design and ensure it aligns with the Quarto website\nPractice the presentation with the group, ensuring each member knows their role.\n\n\nJune 9 (Sunday) - June 12 (Wednesday): Final Review and Rehearsal\n\nAll Team Members\n\nConduct a full review of the website, poster, and presentation.\nRehearse the presentation multiple times to ensure smooth delivery.\nMake any necessary final adjustments based on rehearsals.\n\n\nJune 13 (Thursday) - June 14 (Friday): Buffer Days\n\nAll Team Members\n\nUse these days as buffer time for any unexpected delays or additional fine-tuning.\nEnsure everything is ready for submission by the deadline.\n\n\nJune 15 (Saturday): Submission Day\n\nAll Team Members\n\nSubmit the final Quarto website, poster, and any other required materials."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hello, we are GROUP 2!\nYou can find our personal webpages below:\nAlicia\nKeke\nYouTing"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics and Applications - Group 2",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications - Group 2 homepage. In this website, you will find our project submissions."
  },
  {
    "objectID": "Poster.html",
    "href": "Poster.html",
    "title": "Poster",
    "section": "",
    "text": "The original poster can be viewed here."
  },
  {
    "objectID": "ShinyApp.html",
    "href": "ShinyApp.html",
    "title": "Shiny App",
    "section": "",
    "text": "Welcome to our R Shiny App\n\nThe R Shiny application aims to help user explore the data provided by MC3 of the VAST Challenge 2024.\nThe Shiny App can be accessed on Shiny.io here."
  }
]